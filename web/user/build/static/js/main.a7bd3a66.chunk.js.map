{"version":3,"sources":["MySnackbarContent.js","Register.js","Login.js","Profile.js","Complete.js","index.js"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Object","objectWithoutProperties","Icon","react_default","a","createElement","SnackbarContent_default","assign","classNames","aria-describedby","id","action","IconButton_default","key","aria-label","color","close","onClick","Close_default","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInfoClose","event","reason","orInfo","state","open","setState","handleKeyDown","e","keyCode","handleRegister","preventDefault","infoOpen","email","emailErr","disabled","emailValue","target","value","test","_this2","fetch","method","headers","Content-Type","body","JSON","stringify","then","rsp","status","json","code","data","passwordErr","catch","err","alert","_this3","container","CssBaseline_default","LinearProgress_default","hidden","progress","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","src_MySnackbarContent","Paper_default","paper","Typography_default","component","typography","Cloud_default","cloud","Divider_default","divider","form","onKeyDown","TextField_default","textField","label","autoComplete","onChange","handleEmail","onBlur","required","Button_default","button","Link_default","history","push","React","Component","height","background","overflow","position","width","maxWidth","margin","padding","textAlign","verticalAlign","lineHeight","flexDirection","justifyContent","marginTop","marginBottom","storage","window","localStorage","Login","handleLogin","password","token","get","that","setTimeout","onSubmit","type","handlePassword","ButtonAppBar","avatar","nickname","mode","x-login-token","freshToken","user_id","redirectLogin","_this4","root","AppBar_default","Toolbar_default","toolbar","Grid_default","wrapMenu","menuButton","Menu_default","handleLogout","ExitToApp_default","elevation","justify","Avatar_default","src","bigAvatar","Table_default","table","TableBody_default","TableRow_default","TableCell_default","scope","align","flexGrow","marginLeft","rightIcon","cursor","fileInput","b","Complete","avatarSrc","passwordConfirm","nicknameErr","passwordConfirmErr","payload","match","params","split","tokenObj","parse","atob","Date","getTime","exp","console","log","URL","createObjectURL","files","nicknameValue","passwordValue","length","passwordConfirmValue","formData","FormData","append","x-register-token","FormControl_default","accept","multiple","handleAvatar","htmlFor","avatarLabel","alt","defaultValue","handleNickname","handlePasswordConfirm","handleComplete","App","react_router_dom","react_router","path","exact","Profile","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.a7bd3a66.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(MySnackbarContent);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Link from '@material-ui/core/Link';\n\n\n\nconst styles = theme => ({\n    container: {\n        height: '100vh',\n        background: 'linear-gradient(to right, #348AC7, #7474BF);',\n        overflow: 'hidden'\n    },\n    progress: {\n        position: 'fixed',\n        width: '100%',\n        background: 'transparent'\n    },\n    paper: {\n        maxWidth: 400,\n        margin: '50px auto',\n        padding: '20px 0 40px 0',\n    },\n    typography: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        fontSize: '18px',\n        lineHeight: '40px'\n    },\n    cloud: {\n        verticalAlign: 'top',\n        fontSize: '35px',\n        marginRight: 10\n    },\n    divider: {\n        margin: '0 0 40px 0'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textField: {\n        width: '70%'\n    },\n    button: {\n        fontSize: '18px',\n        height: 45,\n        width: '40%',\n        marginTop: 20,\n        marginBottom: 5,\n    }\n});\n\nconst registerApi = \"http://www.koogo.net:8080/user/auth/register\";\nconst verifyEmail = function(email){\n    let reg = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/;\n    return reg.test(email);\n};\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: {\n                open: false,\n                variant: \"success\",\n                message: \"\"\n            },\n            infoOpen: true,\n            email: \"\",\n            emailErr: false,\n            disabled: false,\n        }\n    }\n    handleEmail(e) {\n        let emailValue = e.target.value;\n        if (emailValue === \"\") {\n            this.setState({\n                email: \"\",\n                emailErr: false\n            });\n            return;\n        }\n        if (emailValue !== \"\") {\n            if (!verifyEmail(emailValue)) {\n                this.setState({\n                    email: emailValue,\n                    emailErr: true\n                });\n            } else {\n                this.setState({\n                    email: emailValue,\n                    emailErr: false\n                });\n            }\n        }\n    }\n    handleInfoClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        let orInfo = this.state.info;\n        orInfo.open = false;\n        this.setState({\n            info: orInfo\n        });\n    };\n    handleKeyDown = e => {\n        if (e.keyCode === 13) {\n            this.handleRegister();\n            e.preventDefault();\n        }\n    };\n    handleRegister() {\n        if (!this.state.email) {\n            this.setState({\n                emailErr: true,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"邮箱不能为空!\"\n                }\n            });\n            return;\n        }\n        if (this.state.emailErr) {\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"邮箱格式错误\"\n                }\n            });\n            return;\n        }\n        fetch(registerApi, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n            })\n        }).then(rsp => {\n            if(rsp.status === 200) {\n                return rsp.json();\n            } else {\n                return {\n                    code: rsp.status,\n                    message: \"internal error\"\n                }\n            }\n        }).then(data => {\n            if(data.code === 200) {\n                this.setState({\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"success\",\n                        message: \"注册成功, 验证链接已发送至您的邮箱, 请在30分钟以内前往完成注册!\"\n                    }\n                });\n                this.setState({\n                    email: \"\",\n                });\n                return;\n            }\n            if(data.code === 300) {\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"邮箱格式不正确!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 301) {\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"该邮箱已被注册!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 302) {\n                this.setState({\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"验证邮件发送失败, 请稍后再试\"\n                    }\n                });\n                return;\n            }\n\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"系统错误: \" + data.message\n                }\n            });\n        }).catch(err => {\n            alert(err);\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"网络错误: \" + err\n                }\n            });\n        });\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container}>\n                <CssBaseline/>\n                <LinearProgress hidden={!this.state.disabled} className={classes.progress} />\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.info.open}\n                    autoHideDuration={2000}\n                    onClose={this.handleInfoClose}\n                >\n                    <MySnackbarContent\n                        onClose={this.handleInfoClose}\n                        variant={this.state.info.variant}\n                        message={this.state.info.message}\n                    />\n                </Snackbar>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        className={classes.typography}\n                    >\n                        <Cloud className={classes.cloud}/>云记\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <form className={classes.form} onKeyDown={this.handleKeyDown}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"login-email\"\n                            variant=\"filled\"\n                            label=\"邮箱\"\n                            autoComplete=\"off\"\n                            value={this.state.email}\n                            onChange={e => this.handleEmail(e)}\n                            onBlur={e => this.handleEmail(e)}\n                            error={this.state.emailErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <Button\n                            variant=\"outlined\" color=\"primary\"\n                            className={classes.button}\n                            onClick={() => this.handleRegister()}\n                            disabled={this.state.disabled}\n                        >\n                            注册\n                        </Button>\n                        <Link\n                            component=\"button\"\n                            variant=\"body2\"\n                            onClick={() => {\n                                this.props.history.push(\"/login\");\n                            }}\n                        >\n                            已注册, 登陆\n                        </Link>\n                    </form>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Register);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Link from \"@material-ui/core/Link\";\n\n\n\nconst styles = (theme) => ({\n    container: {\n        height: '100vh',\n        background: 'linear-gradient(to right, #348AC7, #7474BF);',\n        overflow: 'hidden'\n    },\n    progress: {\n        position: 'fixed',\n        width: '100%',\n        background: 'transparent'\n    },\n    paper: {\n        maxWidth: 400,\n        margin: '50px auto',\n        padding: '20px 0 40px 0',\n    },\n    typography: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        fontSize: '18px',\n        lineHeight: '40px'\n    },\n    cloud: {\n        verticalAlign: 'top',\n        fontSize: '35px',\n        marginRight: 10\n    },\n    divider: {\n        margin: '0 0 40px 0'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textField: {\n        width: '70%'\n    },\n    button: {\n        fontSize: '18px',\n        height: 45,\n        width: '40%',\n        marginTop: 20,\n        marginBottom: 5,\n    }\n});\n\nconst loginApi = \"http://www.koogo.net:8080/user/auth/login\";\nconst storage = window.localStorage;\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: {\n                open: false,\n                variant: \"success\",\n                message: \"\"\n            },\n            infoOpen: true,\n            email: \"\",\n            password: \"\",\n            emailErr: false,\n            passwordErr: false,\n            disabled: false,\n        }\n    }\n    componentDidMount() {\n        if (storage.token) {\n            this.props.history.push(\"/profile\")\n        }\n    }\n\n    handleEmail(e) {\n        this.setState({\n            email: e.target.value,\n            emailErr: false\n        })\n    }\n    handlePassword(e) {\n        this.setState({\n            password: e.target.value,\n            passwordErr: false\n        })\n    }\n    handleInfoClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        let orInfo = this.state.info;\n        orInfo.open = false;\n        this.setState({\n            info: orInfo\n        });\n    };\n    handleKeyDown = e => {\n        if (e.keyCode === 13) {\n            this.handleLogin();\n            e.preventDefault();\n        }\n    };\n    handleLogin() {\n        if(!this.state.email) {\n            this.setState({\n                emailErr: true,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"邮箱不能为空!\"\n                }\n            });\n            return\n        }\n        if(!this.state.password) {\n            this.setState({\n                passwordErr: true,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"密码不能为空!\"\n                }\n            });\n            return;\n        }\n        fetch(loginApi, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        }).then(rsp => {\n            if(rsp.status === 200) {\n                let token = rsp.headers.get(\"X-Login-token\");\n                storage.token = token;\n                return rsp.json();\n            } else {\n                return {\n                    code: rsp.status,\n                    message: \"internal error\"\n                }\n            }\n        }).then(data => {\n            if(data.code === 200) {\n                this.setState({\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"success\",\n                        message: \"登陆成功!\"\n                    }\n                });\n\n                let that = this;\n                setTimeout(function () {\n                    that.props.history.push(\"/profile\");\n                }, 1000);\n\n                return;\n            }\n            if(data.code === 300) {\n                this.setState({\n                    emailErr: true,\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"邮箱或密码格式不正确!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 303) {\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"用户不存在!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 304) {\n                this.setState({\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"密码错误!\"\n                    }\n                });\n                return;\n            }\n\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"未知错误!\"\n                }\n            });\n        }).catch(err => {\n            alert(err);\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"网络错误: \" + err\n                }\n            });\n        });\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container} onSubmit={e => {\n                alert(e)\n            }}>\n                <CssBaseline/>\n                <LinearProgress hidden={!this.state.disabled} className={classes.progress} />\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.info.open}\n                    autoHideDuration={1000}\n                    onClose={this.handleInfoClose}\n                >\n                    <MySnackbarContent\n                        onClose={this.handleInfoClose}\n                        variant={this.state.info.variant}\n                        message={this.state.info.message}\n                    />\n                </Snackbar>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        className={classes.typography}\n                    >\n                        <Cloud className={classes.cloud}/>云记\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider}/>\n                    <form className={classes.form} onKeyDown={this.handleKeyDown}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"login-email\"\n                            variant=\"filled\"\n                            label=\"邮箱\"\n                            autoComplete=\"off\"\n                            value={this.state.email}\n                            onChange={e => this.handleEmail(e)}\n                            onBlur={e => this.handleEmail(e)}\n                            error={this.state.emailErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <TextField\n                            className={classes.textField}\n                            id=\"login-password\"\n                            variant=\"filled\"\n                            label=\"密码\"\n                            autoComplete=\"new-password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={e => this.handlePassword(e)}\n                            onBlur={e => this.handlePassword(e)}\n                            error={this.state.passwordErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <Button\n                            variant=\"outlined\" color=\"primary\"\n                            className={classes.button}\n                            onClick={() => this.handleLogin()}\n                            disabled={this.state.disabled}\n                        >\n                            登陆\n                        </Button>\n                        <Link\n                            component=\"button\"\n                            variant=\"body2\"\n                            onClick={() => {\n                                this.props.history.push(\"/register\");\n                            }}\n                        >\n                            没有账号, 注册\n                        </Link>\n                    </form>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport MySnackbarContent from \"./MySnackbarContent\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\n\nconst styles = theme => ({\n    root: {flexGrow: 1,},\n    toolbar: {display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'},\n    wrapMenu: {display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'},\n    menuButton: {marginLeft: -12, marginRight: 20},\n    paper: {width: 450, margin: 'auto', padding: 30, marginTop: 20, textAlign: 'center'},\n    rightIcon: {marginLeft: theme.spacing.unit,},\n    divider: {margin: '0 0 20px 0'},\n    bigAvatar: {margin: 10, width: 100, height: 100, cursor: 'pointer'},\n    fileInput: {display: 'none',},\n    b: {display: 'flex', width: 300}\n});\n\nconst storage = window.localStorage;\nclass ButtonAppBar extends React.Component {\n    image_url;\n    user_id;\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: \"\",\n            id: \"\",\n            email: \"\",\n            nickname: \"\",\n            info: {\n                open: false,\n                variant: \"success\",\n                message: \"\"\n            },\n            disabled: false\n        }\n    }\n    redirectLogin(){\n        storage.token = \"\";\n        this.props.history.push(\"/login\");\n    }\n    handleLogout() {\n        fetch(\"http://www.koogo.net:8080/user/auth/logout\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"x-login-token\": storage.token,\n            }\n        }).then(rsp => {\n            let freshToken = rsp.headers.get(\"x-login-token\")\n            if(freshToken) {\n                storage.token = freshToken;\n            }\n            return rsp.json()\n        }).then(data => {\n            storage.token = \"\";\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"success\",\n                    message: \"注销登陆成功!\"\n                }\n            });\n\n            let that = this;\n            setTimeout(function () {\n                that.props.history.push(\"/login\");\n            }, 1000);\n        }).catch(err => {\n            storage.token = \"\";\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"注销登陆失败!\"\n                }\n            });\n        })\n    }\n    componentDidMount() {\n        if (storage.token === \"\") {\n            this.props.history.push(\"/login\")\n        } else {\n            fetch(\"http://www.koogo.net:8080/user/info/\", {\n                headers: {\n                    \"x-login-token\": storage.token\n                },\n                mode: \"cors\"\n            }).then(rsp => {\n                return rsp.json()\n            }).then(data => {\n                if(data.code === 200) {\n                    this.setState({\n                        email: data.data.email,\n                        id: data.data.user_id,\n                        nickname: data.data.nickname,\n                        avatar: data.data.avatar,\n                    })\n                } else {\n                    alert(data.message);\n                    this.redirectLogin()\n                }\n            }).catch(err => {\n                alert(err);\n                this.redirectLogin();\n            });\n        }\n    }\n\n    render(){\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.info.open}\n                    autoHideDuration={1000}\n                    onClose={this.handleInfoClose}\n                >\n                    <MySnackbarContent\n                        onClose={this.handleInfoClose}\n                        variant={this.state.info.variant}\n                        message={this.state.info.message}\n                    />\n                </Snackbar>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\" className={classes.toolbar}>\n                        <Grid className={classes.wrapMenu}>\n                            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\">\n                                用户信息\n                            </Typography>\n                        </Grid>\n                        <Button color=\"inherit\" onClick={() => {this.handleLogout()}}><ExitToApp/>退出登陆</Button>\n                    </Toolbar>\n                </AppBar>\n                <Paper className={classes.paper} elevation={1}>\n                    <Grid container justify=\"center\">\n                        <Avatar src={this.state.avatar} className={classes.bigAvatar} />\n                    </Grid>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Table className={classes.table}>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    用户ID\n                                </TableCell>\n                                <TableCell align=\"right\">{this.state.id}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    昵称\n                                </TableCell>\n                                <TableCell align=\"right\">{this.state.nickname}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    邮箱\n                                </TableCell>\n                                <TableCell align=\"right\">{this.state.email}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    }\n\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Link from \"@material-ui/core/Link\";\n\n\n\nconst styles = (theme) => ({\n    container: {\n        height: '100vh',\n        background: 'linear-gradient(to right, #348AC7, #7474BF);',\n        overflow: 'hidden'\n    },\n    progress: {\n        position: 'fixed',\n        width: '100%',\n        background: 'transparent'\n    },\n    paper: {\n        maxWidth: 400,\n        margin: '50px auto',\n        padding: '20px 0 40px 0',\n    },\n    typography: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        fontSize: '18px',\n        lineHeight: '40px'\n    },\n    cloud: {\n        verticalAlign: 'top',\n        fontSize: '35px',\n        marginRight: 10\n    },\n    divider: {\n        margin: '0 0 20px 0'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textField: {\n        width: '70%',\n        background: 'transparent'\n    },\n    avatarLabel: {\n        textAlign: 'center',\n        cursor: 'pointer',\n        marginBottom: 10\n    },\n    button: {\n        fontSize: '18px',\n        height: 45,\n        width: '40%',\n        marginTop: 30,\n        marginBottom: 5,\n    },\n    bigAvatar: {width: 100, height: 100, cursor: 'pointer'},\n    fileInput: {display: 'none',},\n});\n\nconst completeApi = \"http://www.koogo.net:8080/user/auth/complete\";\n\nclass Complete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: {\n                open: false,\n                variant: \"success\",\n                message: \"\"\n            },\n            avatar: null,\n            avatarSrc: \"http://www.koogo.net:8080/user/statics/avatar/avatar_default.png\",\n            email: \"\",\n            nickname: \"\",\n            password: \"\",\n            passwordConfirm: \"\",\n            nicknameErr: false,\n            passwordErr: false,\n            passwordConfirmErr: false,\n            disabled: false,\n        }\n    }\n    componentDidMount() {\n        let payload = this.props.match.params.token.split(\".\")[1];\n        let tokenObj = null;\n        try {\n            tokenObj = JSON.parse(atob(payload));\n        } catch (e) {\n            let that = this;\n            setTimeout(function () {\n                that.props.history.push(\"/register\");\n            }, 1500);\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"注册验证token非法!\"\n                }\n            });\n            return;\n        }\n        if (!tokenObj.email) {\n            let that = this;\n            setTimeout(function () {\n                that.props.history.push(\"/register\");\n            }, 1500);\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"注册验证token非法!\"\n                }\n            });\n            return;\n        }\n        let now = (new Date()).getTime();\n        if (now > tokenObj.exp * 1000) {\n            let that = this;\n            setTimeout(function () {\n                that.props.history.push(\"/register\");\n            }, 1500);\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"注册验证token已过期, 请重新注册!\"\n                }\n            });\n            return;\n        }\n        console.log(tokenObj.email);\n        this.setState({\n            email: tokenObj.email,\n            token: this.props.match.params.token\n        });\n    }\n    handleAvatar(e){\n        let src = URL.createObjectURL(e.target.files[0]);\n        this.setState({\n            avatar: e.target.files[0],\n            avatarSrc: src\n        });\n    }\n    handleNickname(e) {\n        let err = false;\n        let nicknameValue = e.target.value;\n        if (nicknameValue && nicknameValue < 4) {\n            err = true\n        }\n        this.setState({\n            nickname: nicknameValue,\n            nicknameErr: err\n        })\n    }\n    handlePassword(e) {\n        let passwordValue = e.target.value;\n        if (passwordValue === \"\") {\n            this.setState({\n                password: \"\",\n                passwordErr: false\n            });\n            return;\n        }\n        if (passwordValue.length < 6) {\n            this.setState({\n                password: passwordValue,\n                passwordErr: true,\n            });\n            return;\n        }\n        this.setState({\n            password: passwordValue,\n            passwordErr: false\n        })\n    }\n    handlePasswordConfirm(e) {\n        let passwordConfirmValue = e.target.value;\n        if (passwordConfirmValue !== this.state.password) {\n            this.setState({\n                passwordConfirm: passwordConfirmValue,\n                passwordConfirmErr: true\n            });\n            return;\n        }\n        this.setState({\n            passwordConfirm: passwordConfirmValue,\n            passwordConfirmErr: false\n        })\n    }\n    handleInfoClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        let orInfo = this.state.info;\n        orInfo.open = false;\n        this.setState({\n            info: orInfo\n        });\n    };\n    handleKeyDown = e => {\n        if (e.keyCode === 13) {\n            this.handleLogin();\n            e.preventDefault();\n        }\n    };\n    handleComplete() {\n        if (!this.state.nickname || this.state.nicknameErr) {\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"昵称不能为空且长度不能小于4位!\"\n                }\n            });\n            return;\n        }\n        if (!this.state.password || this.state.passwordErr) {\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"密码不能为空且长度不能小于6位!\"\n                }\n            });\n            return;\n        }\n        if (this.state.passwordConfirmErr) {\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"两次输入密码不-致!\"\n                }\n            });\n            return;\n        }\n\n        let formData = new FormData();\n        formData.append('nickname', this.state.nickname);\n        formData.append('password', this.state.password);\n        if(this.state.avatar) {\n            formData.append('avatar', this.state.avatar);\n        }\n\n        fetch(completeApi, {\n            method: \"POST\",\n            headers: {\n                \"x-register-token\": this.state.token\n            },\n            body: formData\n        }).then(rsp => {\n            if(rsp.status === 200) {\n                return rsp.json();\n            } else {\n                return {\n                    code: rsp.status,\n                    message: \"internal error\"\n                }\n            }\n        }).then(data => {\n            if(data.code === 200) {\n                let that = this;\n                setTimeout(function () {\n                    that.props.history.push(\"/profile\");\n                }, 1500);\n                this.setState({\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"success\",\n                        message: \"注册完成, 请登陆!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 301) {\n                let that = this;\n                setTimeout(function () {\n                    that.props.history.push(\"/profile\");\n                }, 1500);\n                this.setState({\n                    emailErr: true,\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"该邮箱注册已经完成, 请登陆!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 401) {\n                let that = this;\n                setTimeout(function () {\n                    that.props.history.push(\"/register\");\n                }, 1500);\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"注册验证token非法或已过期, 请重新注册!\"\n                    }\n                });\n                return;\n            }\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"未知错误: \" + data.message\n                }\n            });\n        }).catch(err => {\n            alert(err);\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"网络错误: \" + err\n                }\n            });\n        });\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container} onSubmit={e => {\n                alert(e)\n            }}>\n                <CssBaseline/>\n                <LinearProgress hidden={!this.state.disabled} className={classes.progress} />\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.info.open}\n                    autoHideDuration={1000}\n                    onClose={this.handleInfoClose}\n                >\n                    <MySnackbarContent\n                        onClose={this.handleInfoClose}\n                        variant={this.state.info.variant}\n                        message={this.state.info.message}\n                    />\n                </Snackbar>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        className={classes.typography}\n                    >\n                        <Cloud className={classes.cloud}/>云记\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider}/>\n                    <form className={classes.form} onKeyDown={this.handleKeyDown}>\n                        <FormControl>\n                            <input\n                                accept=\"image/*\"\n                                className={classes.fileInput}\n                                id=\"avatar-file\"\n                                multiple\n                                type=\"file\"\n                                onChange={e => this.handleAvatar(e)}\n                            />\n                            <label htmlFor=\"avatar-file\" className={classes.avatarLabel}>\n                                <Avatar alt=\"\" src={this.state.avatarSrc} className={classes.bigAvatar} />\n                                <Link variant=\"body2\">\n                                    点击上传\n                                </Link>\n                            </label>\n                        </FormControl>\n                        <TextField\n                            className={classes.textField}\n                            id=\"complete-nickname\"\n                            variant=\"filled\"\n                            label=\"昵称\"\n                            autoComplete=\"off\"\n                            defaultValue={this.state.nickname}\n                            error={this.state.nicknameErr}\n                            disabled={this.state.disabled}\n                            onChange={e => this.handleNickname(e)}\n                            onBlur={e => this.handleNickname(e)}\n                            required\n                        />\n                        <TextField\n                            className={classes.textField}\n                            variant=\"filled\"\n                            label=\"邮箱\"\n                            autoComplete=\"off\"\n                            value={this.state.email}\n                            disabled={true}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            id=\"complete-password\"\n                            variant=\"filled\"\n                            label=\"密码\"\n                            autoComplete=\"new-password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={e => this.handlePassword(e)}\n                            onBlur={e => this.handlePassword(e)}\n                            error={this.state.passwordErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <TextField\n                            className={classes.textField}\n                            id=\"complete-password-confirm\"\n                            variant=\"filled\"\n                            label=\"密码确认\"\n                            autoComplete=\"new-password\"\n                            type=\"password\"\n                            value={this.state.passwordConfirm}\n                            onChange={e => this.handlePasswordConfirm(e)}\n                            onBlur={e => this.handlePasswordConfirm(e)}\n                            error={this.state.passwordConfirmErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <Button\n                            variant=\"outlined\" color=\"primary\"\n                            className={classes.button}\n                            onClick={() => this.handleComplete()}\n                            disabled={this.state.disabled}\n                        >\n                            完成注册\n                        </Button>\n                    </form>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nComplete.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Complete);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Register from \"./Register\"\nimport Login from \"./Login\"\nimport Profile from \"./Profile\"\nimport Complete from \"./Complete\"\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Route path=\"/\" exact component={Profile}/>\n                <Route path=\"/Register\" component={Register}/>\n                <Route path=\"/Complete/:token\" component={Complete}/>\n                <Route path=\"/login\" component={Login}/>\n                <Route path=\"/profile\" component={Profile}/>\n            </Router>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}