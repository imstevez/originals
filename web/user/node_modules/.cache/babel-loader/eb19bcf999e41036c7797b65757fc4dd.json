{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/originals-user/src/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n  root: {\n    width: 'auto',\n    display: 'block',\n    padding: '50px 0'\n  },\n  paper: {\n    width: 600,\n    margin: 'auto',\n    padding: '40px 30px'\n  },\n  input: {\n    width: 400\n  },\n  button: {\n    margin: 20,\n    width: 150\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  divider: {\n    margin: '0 0 10px 0'\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 100,\n    height: 100,\n    cursor: 'pointer'\n  },\n  fileInput: {\n    display: 'none'\n  }\n});\n\nconst obj2params = obj => {\n  let result = '';\n  let item;\n\n  for (item in obj) {\n    result += '&' + item + '=' + encodeURIComponent(obj[item]);\n  }\n\n  if (result) {\n    result = result.slice(1);\n  }\n\n  return result;\n};\n\nconst storage = window.localStorage;\n\nclass Complete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailValidate: false,\n      passValidate: false,\n      email: \"\",\n      password: \"\",\n      emailErr: false,\n      passwordErr: false\n    };\n  }\n\n  componentDidMount() {\n    if (storage.token !== \"\") {\n      this.props.history.push(\"/profile\");\n    }\n  }\n\n  handleEmail(e) {\n    let reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n    this.setState({\n      email: e.target.value\n    });\n\n    if (this.state.email !== \"\" && !reg.test(this.state.email)) {\n      this.setState({\n        emailErr: true,\n        emailValidate: false\n      });\n    } else if (this.state.email === \"\") {\n      this.setState({\n        emailErr: false,\n        emailValidate: false\n      });\n    } else {\n      this.setState({\n        emailErr: false,\n        emailValidate: true\n      });\n    }\n  }\n\n  handlePass(e) {\n    this.setState({\n      password: e.target.value\n    });\n\n    if (this.state.password !== \"\") {\n      this.setState({\n        passwordErr: false,\n        passValidate: true\n      });\n    } else {\n      this.setState({\n        passwordErr: false,\n        passValidate: false\n      });\n    }\n  }\n\n  handleLogin() {\n    if (this.state.emailValidate && this.state.passValidate) {\n      fetch(\"http://localhost:8080/user/auth/login\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(rsp => {\n        storage.token = rsp.headers.get(\"x-login-token\");\n        return rsp.json();\n      }).then(data => {\n        if (data.code === 200) {\n          storage.token = data.result.token;\n          this.props.history.push(\"/profile\");\n        } else {\n          this.setState({\n            email: \"\",\n            password: \"\",\n            emailErr: false,\n            passwordErr: false,\n            emailValidate: false,\n            passwordValidate: false\n          });\n          alert(data.message);\n        }\n      }).catch(err => {\n        alert(err);\n      });\n    } else {\n      this.setState({\n        emailErr: !this.state.emailValidate,\n        passwordErr: !this.state.passValidate\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Login | \", React.createElement(\"a\", {\n      href: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Register\")), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: this.state.emailErr,\n      id: \"login-email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: e => this.handleEmail(e),\n      onBlur: e => this.handleEmail(e),\n      type: \"text\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.passwordErr,\n      id: \"login-pwd\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: e => this.handlePass(e),\n      onBlur: e => this.handlePass(e),\n      type: \"password\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      size: \"large\",\n      onClick: e => this.handleLogin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"LOGIN\"))));\n  }\n\n}\n\nComplete.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Complete);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/originals-user/src/Login.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","TextField","Button","Grid","Typography","Divider","styles","theme","root","width","display","padding","paper","margin","input","button","rightIcon","marginLeft","spacing","unit","divider","bigAvatar","height","cursor","fileInput","obj2params","obj","result","item","encodeURIComponent","slice","storage","window","localStorage","Complete","Component","constructor","props","state","emailValidate","passValidate","email","password","emailErr","passwordErr","componentDidMount","token","history","push","handleEmail","e","reg","RegExp","setState","target","value","test","handlePass","handleLogin","fetch","method","mode","headers","body","JSON","stringify","then","rsp","get","json","data","code","passwordValidate","alert","message","catch","err","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n    root: {width: 'auto', display: 'block', padding: '50px 0'},\n    paper: {width: 600, margin: 'auto', padding: '40px 30px',},\n    input: {width: 400},\n    button: {margin: 20, width: 150,},\n    rightIcon: {marginLeft: theme.spacing.unit,},\n    divider: {margin: '0 0 10px 0'},\n    bigAvatar: {margin: 10, width: 100, height: 100, cursor: 'pointer'},\n    fileInput: {display: 'none',},\n});\n\nconst obj2params = obj =>  {\n    let result = '';\n    let item;\n    for(item in obj){\n        result += '&' + item + '=' +encodeURIComponent(obj[item]);\n    }\n    if(result) {\n        result = result.slice(1);\n    }\n    return result;\n};\n\nconst storage = window.localStorage;\n\nclass Complete extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            emailValidate: false,\n            passValidate: false,\n            email: \"\",\n            password: \"\",\n            emailErr: false,\n            passwordErr: false\n        };\n    }\n    componentDidMount() {\n        if(storage.token !== \"\") {\n            this.props.history.push(\"/profile\")\n        }\n    }\n\n    handleEmail(e){\n        let reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n        this.setState({email: e.target.value})\n        if(this.state.email !== \"\" && !reg.test(this.state.email)){\n            this.setState({\n                emailErr: true,\n                emailValidate: false\n            });\n        } else if (this.state.email === \"\") {\n            this.setState({\n                emailErr: false,\n                emailValidate: false\n            })\n        } else {\n            this.setState({\n                emailErr: false,\n                emailValidate: true\n            })\n        }\n    }\n    handlePass(e){\n        this.setState({password: e.target.value})\n        if(this.state.password !== \"\"){\n            this.setState({\n                passwordErr: false,\n                passValidate: true\n            });\n        } else {\n            this.setState({\n                passwordErr: false,\n                passValidate: false\n            })\n        }\n    }\n    handleLogin(){\n        if(this.state.emailValidate && this.state.passValidate){\n            fetch(\"http://localhost:8080/user/auth/login\", {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n            }).then(rsp => {\n                storage.token = rsp.headers.get(\"x-login-token\");\n                return rsp.json()\n            }).then(data => {\n                if(data.code === 200) {\n                    storage.token = data.result.token;\n                    this.props.history.push(\"/profile\");\n                } else {\n                    this.setState({\n                        email: \"\",\n                        password: \"\",\n                        emailErr: false,\n                        passwordErr: false,\n                        emailValidate: false,\n                        passwordValidate: false\n                    });\n                    alert(data.message)\n                }\n            }).catch( err => {\n                alert(err);\n            });\n        } else {\n            this.setState({\n                emailErr: !this.state.emailValidate,\n                passwordErr: !this.state.passValidate\n            })\n        }\n\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" gutterBottom align=\"right\">\n                        Login | <a href=\"/register\">Register</a>\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Grid container justify=\"center\">\n                        <TextField error={this.state.emailErr} id=\"login-email\" label=\"Email\" value={this.state.email} onChange={e => this.handleEmail(e)} onBlur={e => this.handleEmail(e)} type=\"text\" className={classes.input} margin=\"normal\"/>\n                        <TextField error={this.state.passwordErr} id=\"login-pwd\" label=\"Password\" value={this.state.password} onChange={e => this.handlePass(e)} onBlur={e => this.handlePass(e)} type=\"password\" className={classes.input} margin=\"normal\"/>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} size=\"large\" onClick={e => this.handleLogin()}>\n                            LOGIN\n                        </Button>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nComplete.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Complete);\n"]},"metadata":{},"sourceType":"module"}