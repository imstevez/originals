{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/originals-user/src/Complete.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n  root: {\n    width: 'auto',\n    display: 'block',\n    padding: '50px 0'\n  },\n  paper: {\n    width: 600,\n    margin: 'auto',\n    padding: '40px 30px'\n  },\n  input: {\n    width: 400\n  },\n  button: {\n    margin: 20,\n    width: 150\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  divider: {\n    margin: '0 0 20px 0'\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 100,\n    height: 100,\n    cursor: 'pointer'\n  },\n  fileInput: {\n    display: 'none'\n  }\n});\n\nconst obj2params = obj => {\n  let result = '';\n  let item;\n\n  for (item in obj) {\n    result += '&' + item + '=' + encodeURIComponent(obj[item]);\n  }\n\n  if (result) {\n    result = result.slice(1);\n  }\n\n  return result;\n};\n\nclass Complete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      err: {\n        nickname: false,\n        password: false\n      },\n      validate: {\n        nickname: false,\n        password: false\n      },\n      data: {\n        token: \"\",\n        email: \"\",\n        nickname: \"\",\n        password: \"\",\n        avatar: \"go.jpg\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    let payload = this.props.match.params.token.split(\".\")[1];\n    let tokenObj = JSON.parse(atob(payload));\n    let now = new Date().getTime();\n\n    if (!tokenObj.email) {\n      alert(\"token invalid\");\n      this.props.history.push(\"/register\");\n      return;\n    }\n\n    if (now > tokenObj.exp * 1000) {\n      alert(\"token expired, please register again\");\n      this.props.history.push(\"/register\");\n      return;\n    }\n\n    this.setState({\n      data: {\n        token: this.props.match.params.token,\n        email: tokenObj.email\n      }\n    });\n  }\n\n  handleName(e) {\n    this.setState({\n      data: {\n        nickname: e.target.value\n      }\n    });\n    console.log(this.state.data.email);\n\n    if (this.state.data.nickname === \"\") {\n      this.setState({\n        err: {\n          nickname: false\n        },\n        validate: {\n          nickname: false\n        }\n      });\n    } else if (this.state.data.nickname.length < 4) {\n      this.setState({\n        err: {\n          nickname: true\n        },\n        validate: {\n          nickname: false\n        }\n      });\n    } else {\n      this.setState({\n        err: {\n          nickname: false\n        },\n        validate: {\n          nickname: true\n        }\n      });\n    }\n  }\n\n  handlePassword(e) {\n    this.setState({\n      data: {\n        password: e.target.value\n      }\n    });\n\n    if (this.state.data.password === \"\") {\n      this.setState({\n        err: {\n          password: false\n        },\n        validate: {\n          password: false\n        }\n      });\n    } else if (this.state.data.password.length < 4) {\n      this.setState({\n        err: {\n          password: true\n        },\n        validate: {\n          password: false\n        }\n      });\n    } else {\n      this.setState({\n        err: {\n          password: false\n        },\n        validate: {\n          password: true\n        }\n      });\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.validate.nickname && this.state.validate.password) {\n      fetch(\"http://localhost:8080/register\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: obj2params({\n          token: this.state.data.token,\n          nickname: this.state.data.nickname,\n          password: this.state.data.password\n        })\n      }).then(rsp => {\n        return rsp.json();\n      }).then(data => {\n        if (data.code === 200) {\n          alert(\"complete success\");\n          this.props.history.push(\"/login\");\n        } else {\n          alert(data.message);\n        }\n      }).catch(err => {\n        alert(err);\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Complete\"), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.fileInput,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: this.state.data.avatar,\n      className: classes.bigAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-search\",\n      disabled: true,\n      label: \"Email\",\n      type: \"text\",\n      value: this.state.data.email,\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-search\",\n      onChange: e => this.handleName(e),\n      label: \"Nickname\",\n      type: \"text\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-search\",\n      onChange: e => this.handlePassword(e),\n      label: \"Password\",\n      type: \"password\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.handleSubmit(),\n      color: \"primary\",\n      className: classes.button,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"COMPLETE\"))));\n  }\n\n}\n\nComplete.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Complete);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/originals-user/src/Complete.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","TextField","Button","Grid","Typography","Divider","Avatar","styles","theme","root","width","display","padding","paper","margin","input","button","rightIcon","marginLeft","spacing","unit","divider","bigAvatar","height","cursor","fileInput","obj2params","obj","result","item","encodeURIComponent","slice","Complete","Component","constructor","props","state","err","nickname","password","validate","data","token","email","avatar","componentDidMount","payload","match","params","split","tokenObj","JSON","parse","atob","now","Date","getTime","alert","history","push","exp","setState","handleName","e","target","value","console","log","length","handlePassword","handleSubmit","fetch","method","mode","body","then","rsp","json","code","message","catch","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n    root: {width: 'auto', display: 'block',padding: '50px 0'},\n    paper: {width: 600, margin: 'auto', padding: '40px 30px',},\n    input: {width: 400},\n    button: {margin: 20, width: 150,},\n    rightIcon: {marginLeft: theme.spacing.unit,},\n    divider: {margin: '0 0 20px 0'},\n    bigAvatar: {margin: 10, width: 100, height: 100, cursor: 'pointer'},\n    fileInput: {display: 'none',},\n});\n\nconst obj2params = obj =>  {\n    let result = '';\n    let item;\n    for(item in obj){\n        result += '&' + item + '=' +encodeURIComponent(obj[item]);\n    }\n    if(result) {\n        result = result.slice(1);\n    }\n    return result;\n};\n\nclass Complete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            err: {\n                nickname: false,\n                password: false\n            },\n            validate: {\n                nickname: false,\n                password: false\n            },\n            data: {\n                token: \"\",\n                email: \"\",\n                nickname: \"\",\n                password: \"\",\n                avatar: \"go.jpg\"\n            }\n        }\n    }\n\n    componentDidMount() {\n        let payload = this.props.match.params.token.split(\".\")[1];\n        let tokenObj = JSON.parse(atob(payload));\n        let now = (new Date()).getTime();\n        if (!tokenObj.email) {\n            alert(\"token invalid\");\n            this.props.history.push(\"/register\");\n            return;\n        }\n        if (now > tokenObj.exp * 1000) {\n            alert(\"token expired, please register again\");\n            this.props.history.push(\"/register\");\n            return;\n        }\n        this.setState({\n            data:{\n                token: this.props.match.params.token,\n                email: tokenObj.email\n            }\n        });\n    }\n\n    handleName(e) {\n        this.setState({\n            data: {\n                nickname: e.target.value\n            }\n        });\n        console.log(this.state.data.email);\n        if(this.state.data.nickname === \"\") {\n            this.setState({\n                err: {\n                    nickname: false,\n                },\n                validate: {\n                    nickname: false,\n                }\n            });\n        } else if (this.state.data.nickname.length < 4) {\n            this.setState({\n                err: {\n                    nickname: true,\n                },\n                validate: {\n                    nickname: false,\n                }\n            });\n        } else {\n            this.setState({\n                err: {\n                    nickname: false,\n                },\n                validate: {\n                    nickname: true,\n                }\n            });\n        }\n    }\n\n    handlePassword(e) {\n        this.setState({\n            data: {\n                password: e.target.value\n            }\n        });\n        if(this.state.data.password === \"\") {\n            this.setState({\n                err: {\n                    password: false,\n                },\n                validate: {\n                    password: false,\n                }\n            });\n        } else if (this.state.data.password.length < 4) {\n            this.setState({\n                err: {\n                    password: true,\n                },\n                validate: {\n                    password: false,\n                }\n            });\n        } else {\n            this.setState({\n                err: {\n                    password: false,\n                },\n                validate: {\n                    password: true,\n                }\n            });\n        }\n    }\n    handleSubmit() {\n        if(this.state.validate.nickname && this.state.validate.password) {\n            fetch(\"http://localhost:8080/register\", {\n                method: \"POST\",\n                mode: \"cors\",\n                body: obj2params({\n                    token: this.state.data.token,\n                    nickname: this.state.data.nickname,\n                    password: this.state.data.password\n                }),\n            }).then(rsp => {\n                return rsp.json();\n            }).then(data => {\n                if(data.code === 200) {\n                    alert(\"complete success\");\n                    this.props.history.push(\"/login\");\n                } else {\n                    alert(data.message);\n                }\n            }).catch(err => {\n                alert(err);\n            });\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <Paper className={classes.paper} elevation={1}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\n                        Complete\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Grid container justify=\"center\">\n                        <input\n                            accept=\"image/*\"\n                            className={classes.fileInput}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Avatar alt=\"Remy Sharp\" src={this.state.data.avatar} className={classes.bigAvatar} />\n                        </label>\n                    </Grid>\n                    <Grid container justify=\"center\">\n                        <TextField id=\"standard-search\" disabled label=\"Email\" type=\"text\" value={this.state.data.email} className={classes.input} margin=\"normal\"/>\n                        <TextField id=\"standard-search\" onChange={e => this.handleName(e)} label=\"Nickname\" type=\"text\" className={classes.input} margin=\"normal\"/>\n                        <TextField id=\"standard-search\" onChange={e => this.handlePassword(e)} label=\"Password\" type=\"password\" className={classes.input} margin=\"normal\"/>\n                        <Button variant=\"contained\" onClick={() => this.handleSubmit()} color=\"primary\" className={classes.button} size=\"large\">\n                            COMPLETE\n                        </Button>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nComplete.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Complete);\n"]},"metadata":{},"sourceType":"module"}