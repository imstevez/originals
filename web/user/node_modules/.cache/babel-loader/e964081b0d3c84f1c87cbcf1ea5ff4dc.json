{"ast":null,"code":"import _objectSpread from \"/home/steve/go/src/originals/web/user/originals-user/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/steve/go/src/originals/web/user/originals-user/src/Profile.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: true\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      position: \"absolute\",\n      className: classNames(classes.appBar, this.state.open && classes.appBarShift),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      disableGutters: !this.state.open,\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.handleDrawerOpen,\n      className: classNames(classes.menuButton, this.state.open && classes.menuButtonHidden),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(IconButton, {\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      badgeContent: 4,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(NotificationsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))))), React.createElement(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose)\n      },\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbarIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, mainListItems), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, secondaryListItems)), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.appBarSpacer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Profile\")));\n  }\n\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Dashboard);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/originals-user/src/Profile.js"],"names":["React","PropTypes","classNames","withStyles","CssBaseline","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","Badge","MenuIcon","ChevronLeftIcon","NotificationsIcon","mainListItems","secondaryListItems","drawerWidth","styles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","unit","breakpoints","up","appBarSpacer","content","height","overflow","chartContainer","tableContainer","h5","marginBottom","Dashboard","Component","state","open","handleDrawerOpen","setState","handleDrawerClose","render","classes","props","paper","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n\nclass Dashboard extends React.Component {\n    state = {\n        open: true,\n    };\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"absolute\"\n                    className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n                >\n                    <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(\n                                classes.menuButton,\n                                this.state.open && classes.menuButtonHidden,\n                            )}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            Dashboard\n                        </Typography>\n                        <IconButton color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n                    }}\n                    open={this.state.open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>{mainListItems}</List>\n                    <Divider />\n                    <List>{secondaryListItems}</List>\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                        Profile\n                    </Typography>\n                </main>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}