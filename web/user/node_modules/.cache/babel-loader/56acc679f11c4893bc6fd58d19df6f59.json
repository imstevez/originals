{"ast":null,"code":"var _jsxFileName = \"/Users/stevez/gocode/src/originals/web/user/src/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst styles = theme => ({\n  container: {\n    height: '100vh',\n    padding: 50,\n    background: 'linear-gradient(to right, #348AC7, #7474BF);'\n  },\n  paper: {\n    maxWidth: 400,\n    margin: 'auto',\n    padding: '20px 0 40px 0'\n  },\n  typography: {\n    textAlign: 'center',\n    fontSize: '18px',\n    lineHeight: '18px'\n  },\n  cloud: {\n    fontSize: 70,\n    lineHeight: 70\n  },\n  divider: {\n    margin: '15px 0 40px 0'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textField: {\n    width: '70%'\n  },\n  button: {\n    fontSize: '18px',\n    height: 45,\n    width: '40%',\n    marginTop: 20,\n    marginBottom: 10\n  }\n});\n\nconst loginApi = \"http://www.koogo.net:8080/user/auth/login\";\nconst storage = window.localStorage;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        infoOpen: false\n      });\n    };\n\n    this.state = {\n      infoOpen: false,\n      email: \"\",\n      password: \"\",\n      emailErr: false,\n      passwordErr: false,\n      disabled: false\n    };\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e.target.value,\n      emailErr: false\n    });\n  }\n\n  handlePassword(e) {\n    this.setState({\n      password: e.target.value,\n      passwordErr: false\n    });\n  }\n\n  handleLogin() {\n    if (!this.state.email) {\n      alert(\"邮箱不能为空\");\n      this.setState({\n        emailErr: true\n      });\n      return;\n    }\n\n    if (!this.state.password) {\n      alert(\"密码不能为空\");\n      this.setState({\n        passwordErr: true\n      });\n      return;\n    }\n\n    fetch(loginApi, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(rsp => {\n      if (rsp.status === 200) {\n        let token = rsp.headers.get(\"X-Login-token\");\n        storage.token = token;\n        return rsp.json();\n      } else {\n        return {\n          code: rsp.status,\n          message: \"internal error\"\n        };\n      }\n    }).then(data => {\n      if (data.code === 200) {\n        alert(\"登陆成功\");\n        this.props.history.push(\"/profile\");\n        return;\n      }\n\n      if (data.code === 300) {\n        alert(\"邮箱或密码格式不正确\");\n        this.setState({\n          emailErr: true,\n          passwordErr: true,\n          disabled: false\n        });\n        return;\n      }\n\n      if (data.code === 303) {\n        alert(\"用户不存在\");\n        this.setState({\n          emailErr: true,\n          disabled: false\n        });\n        return;\n      }\n\n      if (data.code === 304) {\n        alert(\"密码错误\");\n        this.setState({\n          passwordErr: true,\n          disabled: false\n        });\n        return;\n      }\n\n      alert(\"未知错误\");\n      this.setState({\n        disabled: false\n      });\n    }).catch(err => {\n      alert(err);\n      this.setState({\n        disabled: false\n      });\n    });\n    this.setState({\n      disabled: true\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: true,\n      autoHideDuration: 1000,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(MySnackbarContent, {\n      variant: \"success\",\n      message: \"This is a success message!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      color: \"primary\",\n      className: classes.typography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Cloud, {\n      className: classes.cloud,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), \"\\u6211\\u8BB0 \\u25CF \\u4E91\\u8D26\\u672C\"), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: classes.textField,\n      id: \"login-email\",\n      variant: \"filled\",\n      label: \"\\u90AE\\u7BB1\",\n      autoComplete: \"off\",\n      value: this.state.email,\n      onChange: e => this.handleEmail(e),\n      error: this.state.emailErr,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.textField,\n      id: \"login-password\",\n      variant: \"filled\",\n      label: \"\\u5BC6\\u7801\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: e => this.handlePassword(e),\n      error: this.state.passwordErr,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: () => this.handleLogin(),\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"\\u767B\\u9646\"), React.createElement(Typography, {\n      component: \"h3\",\n      variant: \"button\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"\\u8FD8\\u672A\\u6CE8\\u518C, \\u6CE8\\u518C\")))));\n  }\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/stevez/gocode/src/originals/web/user/src/Login.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","Button","Typography","Divider","Cloud","TextField","MySnackbarContent","Snackbar","styles","theme","container","height","padding","background","paper","maxWidth","margin","typography","textAlign","fontSize","lineHeight","cloud","divider","form","display","flexDirection","justifyContent","alignItems","textField","width","button","marginTop","marginBottom","loginApi","storage","window","localStorage","Login","Component","constructor","props","handleClose","event","reason","setState","infoOpen","state","email","password","emailErr","passwordErr","disabled","handleEmail","e","target","value","handlePassword","handleLogin","alert","fetch","method","headers","body","JSON","stringify","then","rsp","status","token","get","json","code","message","data","history","push","catch","err","render","classes","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\n\nconst styles = (theme) => ({\n    container: {\n        height: '100vh',\n        padding: 50,\n        background: 'linear-gradient(to right, #348AC7, #7474BF);',\n    },\n    paper: {\n        maxWidth: 400,\n        margin: 'auto',\n        padding: '20px 0 40px 0',\n    },\n    typography: {\n        textAlign: 'center',\n        fontSize: '18px',\n        lineHeight: '18px'\n    },\n    cloud: {\n        fontSize: 70,\n        lineHeight: 70,\n    },\n    divider: {\n        margin: '15px 0 40px 0'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textField: {\n        width: '70%'\n    },\n    button: {\n        fontSize: '18px',\n        height: 45,\n        width: '40%',\n        marginTop: 20,\n        marginBottom: 10,\n    }\n});\n\nconst loginApi = \"http://www.koogo.net:8080/user/auth/login\";\nconst storage = window.localStorage;\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            infoOpen: false,\n            email: \"\",\n            password: \"\",\n            emailErr: false,\n            passwordErr: false,\n            disabled: false,\n        }\n    }\n    handleEmail(e) {\n        this.setState({\n            email: e.target.value,\n            emailErr: false\n        })\n    }\n    handlePassword(e) {\n        this.setState({\n            password: e.target.value,\n            passwordErr: false\n        })\n    }\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        this.setState({ infoOpen: false });\n    };\n    handleLogin() {\n        if(!this.state.email) {\n            alert(\"邮箱不能为空\");\n            this.setState({\n                emailErr: true\n            });\n            return\n        }\n        if(!this.state.password) {\n            alert(\"密码不能为空\");\n            this.setState({\n                passwordErr: true\n            });\n            return;\n        }\n        fetch(loginApi, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        }).then(rsp => {\n            if(rsp.status === 200) {\n                let token = rsp.headers.get(\"X-Login-token\");\n                storage.token = token;\n                return rsp.json();\n            } else {\n                return {\n                    code: rsp.status,\n                    message: \"internal error\"\n                }\n            }\n        }).then(data => {\n            if(data.code === 200) {\n                alert(\"登陆成功\");\n                this.props.history.push(\"/profile\");\n                return;\n            }\n            if(data.code === 300) {\n                alert(\"邮箱或密码格式不正确\");\n                this.setState({\n                    emailErr: true,\n                    passwordErr: true,\n                    disabled: false\n                });\n                return;\n            }\n            if(data.code === 303) {\n                alert(\"用户不存在\");\n                this.setState({\n                    emailErr: true,\n                    disabled: false\n                });\n                return;\n            }\n            if(data.code === 304) {\n                alert(\"密码错误\");\n                this.setState({\n                    passwordErr: true,\n                    disabled: false\n                });\n                return;\n            }\n            alert(\"未知错误\");\n            this.setState({\n                disabled: false\n            });\n        }).catch(err => {\n            alert(err);\n            this.setState({\n                disabled: false\n            });\n        });\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container}>\n                <CssBaseline/>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={true}\n                    autoHideDuration={1000}\n                    onClose={this.handleClose}\n                >\n                    <MySnackbarContent\n                        variant=\"success\"\n                        message=\"This is a success message!\"\n                    />\n                </Snackbar>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        className={classes.typography}\n                    >\n                        <Cloud className={classes.cloud}/><br/>我记 ● 云账本\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <form className={classes.form}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"login-email\"\n                            variant=\"filled\"\n                            label=\"邮箱\"\n                            autoComplete=\"off\"\n                            value={this.state.email}\n                            onChange={e => this.handleEmail(e)}\n                            error={this.state.emailErr}\n                            disabled={this.state.disabled}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            id=\"login-password\"\n                            variant=\"filled\"\n                            label=\"密码\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={e => this.handlePassword(e)}\n                            error={this.state.passwordErr}\n                            disabled={this.state.disabled}\n                        />\n                        <Button\n                            variant=\"outlined\" color=\"primary\"\n                            className={classes.button}\n                            onClick={() => this.handleLogin()}\n                            disabled={this.state.disabled}\n                        >\n                            登陆\n                        </Button>\n                        <Typography\n                            component=\"h3\"\n                            variant=\"button\"\n                            color=\"textPrimary\"\n                        >\n                            <a href=\"/register\">还未注册, 注册</a>\n                        </Typography>\n                    </form>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}