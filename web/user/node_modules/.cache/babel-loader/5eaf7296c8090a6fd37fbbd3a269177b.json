{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/www/src/Register.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst styles = theme => ({\n  container: {\n    marginTop: 30\n  },\n  paper: {\n    maxWidth: 500,\n    margin: 'auto',\n    padding: 30\n  },\n  divider: {\n    margin: 0\n  },\n  grid: {\n    display: 'flex',\n    margin: '20px 0',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  formControl: {\n    width: '70%',\n    [theme.breakpoints.down('sm')]: {\n      width: '85%'\n    }\n  },\n  button: {\n    height: 40,\n    marginTop: 20\n  }\n});\n\nconst emailTips = \"E.g. example@example.com\";\nconst registerApi = \"http://www.koogo.net:8080/user/auth/register\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n      email: \"\",\n      emailErr: false,\n      emailValid: false,\n      emailTips: emailTips\n    };\n  }\n\n  handleEmail(e) {\n    let reg = new RegExp(\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$\");\n\n    if (e.target.value !== \"\" && !reg.test(this.state.email)) {\n      this.setState({\n        email: e.target.value,\n        emailErr: true,\n        emailValid: false\n      });\n    } else if (e.target.value === \"\") {\n      this.setState({\n        email: e.target.value,\n        emailErr: false,\n        emailValid: false\n      });\n    } else {\n      this.setState({\n        email: e.target.value,\n        emailErr: false,\n        emailValidate: true\n      });\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.emailValidate) {\n      fetch(registerApi, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email\n        })\n      }).then(rsp => {\n        if (rsp.status !== 200) {\n          return {\n            code: 500,\n            message: \"internal error\"\n          };\n        } else {\n          return rsp.json();\n        }\n      }).then(data => {\n        if (data.code === 200) {\n          alert(\"Success, please complete with the email send to your mailbox\");\n          this.props.history.push(\"/login\");\n        } else {\n          this.setState({\n            disabled: false,\n            emailErr: true\n          });\n          alert(data.message);\n        }\n      }).catch(err => {\n        this.setState({\n          disabled: false\n        });\n        alert(err);\n      });\n    }\n\n    this.setState({\n      disabled: true\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h3\",\n      variant: \"h6\",\n      color: \"textPrimary\",\n      align: \"right\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Register |  \", React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"column\",\n      className: classes.grid,\n      \"aria-disabled\": this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      error: this.state.emailErr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"register-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      id: \"register-email\",\n      value: this.state.email,\n      onChange: e => this.handleEmail(e),\n      \"aria-describedby\": \"register-email-error\",\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      id: \"register-email-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.emailTips)), React.createElement(Button, {\n      onClick: () => this.handleSubmit(),\n      disabled: this.state.disabled,\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"REGISTER\"))));\n  }\n\n}\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/www/src/Register.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","TextField","Button","Grid","Typography","Divider","FormControl","FormHelperText","Input","InputLabel","styles","theme","container","marginTop","paper","maxWidth","margin","padding","divider","grid","display","flexDirection","justifyContent","alignItems","formControl","width","breakpoints","down","button","height","emailTips","registerApi","Register","Component","constructor","props","state","disabled","email","emailErr","emailValid","handleEmail","e","reg","RegExp","target","value","test","setState","emailValidate","handleSubmit","fetch","method","headers","body","JSON","stringify","then","rsp","status","code","message","json","data","alert","history","push","catch","err","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n\n\n\nconst styles = (theme) => ({\n    container: {\n        marginTop: 30\n\n    },\n    paper: {\n        maxWidth: 500,\n        margin: 'auto',\n        padding: 30,\n    },\n    divider: {\n        margin: 0\n    },\n    grid: {\n        display: 'flex',\n        margin: '20px 0',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    formControl: {\n        width: '70%',\n        [theme.breakpoints.down('sm')]: {\n            width: '85%',\n        },\n    },\n    button: {\n        height: 40,\n        marginTop: 20\n    }\n});\n\nconst emailTips = \"E.g. example@example.com\";\nconst registerApi = \"http://www.koogo.net:8080/user/auth/register\";\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            email: \"\",\n            emailErr: false,\n            emailValid: false,\n            emailTips: emailTips\n        };\n    }\n    handleEmail(e) {\n        let reg = new RegExp(\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$\");\n        if(e.target.value !== \"\" && !reg.test(this.state.email)){\n            this.setState({\n                email: e.target.value,\n                emailErr: true,\n                emailValid: false,\n            });\n        } else if (e.target.value === \"\") {\n            this.setState({\n                email: e.target.value,\n                emailErr: false,\n                emailValid: false,\n            })\n        } else {\n            this.setState({\n                email: e.target.value,\n                emailErr: false,\n                emailValidate: true,\n            })\n        }\n    }\n    handleSubmit() {\n        if(this.state.emailValidate){\n            fetch(registerApi, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email\n                })\n            }).then(rsp => {\n                if(rsp.status !== 200) {\n                    return {\n                        code: 500,\n                        message: \"internal error\"\n                    };\n                } else {\n                    return rsp.json();\n                }\n            }).then(data => {\n                if (data.code === 200) {\n                    alert(\"Success, please complete with the email send to your mailbox\")\n                    this.props.history.push(\"/login\");\n                } else {\n                    this.setState({\n                        disabled: false,\n                        emailErr: true\n                    });\n                    alert(data.message);\n                }\n            }).catch(err => {\n                this.setState({\n                    disabled: false\n                });\n                alert(err);\n            });\n        }\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container}>\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h3\" variant=\"h6\" color=\"textPrimary\" align=\"right\" gutterBottom>\n                        Register |  <a href=\"/login\">Login</a>\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Grid container justify=\"center\" alignItems=\"column\" className={classes.grid} aria-disabled={this.state.disabled}>\n                        <FormControl className={classes.formControl} error={this.state.emailErr}>\n                            <InputLabel htmlFor=\"register-email\">Email</InputLabel>\n                            <Input\n                                id=\"register-email\"\n                                value={this.state.email}\n                                onChange={e => this.handleEmail(e)}\n                                aria-describedby=\"register-email-error\"\n                                disabled={this.state.disabled}\n                            />\n                            <FormHelperText id=\"register-email-error\">{this.state.emailTips}</FormHelperText>\n                        </FormControl>\n                        <Button onClick={() => this.handleSubmit()} disabled={this.state.disabled} variant=\"outlined\" color=\"primary\" className={classes.button} size=\"large\">\n                            REGISTER\n                        </Button>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Register);\n"]},"metadata":{},"sourceType":"module"}