{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/originals-user/src/Register.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = theme => ({\n  root: {\n    width: 'auto',\n    display: 'block',\n    padding: '50px 0'\n  },\n  paper: {\n    width: 600,\n    margin: 'auto',\n    padding: 30\n  },\n  input: {\n    width: 300\n  },\n  button: {\n    margin: '20px 0 0 10px',\n    height: 42\n  },\n  divider: {\n    margin: '0 0 40px 0'\n  }\n});\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      emailErr: false,\n      emailValidate: false\n    };\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n    let reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n\n    if (this.state.email !== \"\" && !reg.test(this.state.email)) {\n      this.setState({\n        emailErr: true,\n        emailValidate: false\n      });\n    } else if (this.state.email === \"\") {\n      this.setState({\n        emailErr: false,\n        emailValidate: false\n      });\n    } else {\n      this.setState({\n        emailErr: false,\n        emailValidate: true\n      });\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.emailValidate) {\n      fetch(\"http://localhost:8080/user/auth/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: this.state.email\n        })\n      }).then(rsp => {\n        return rsp.json();\n      }).then(data => {\n        if (data.code === 200) {\n          alert(data.message);\n          this.props.history.push(\"/login\");\n        } else {\n          this.setState({\n            emailErr: false\n          });\n          alert(data.message);\n        }\n      }).catch(err => {\n        alert(err);\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      color: \"textPrimary\",\n      align: \"right\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Register |  \", React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-search\",\n      error: this.state.emailErr,\n      value: this.state.email,\n      onChange: e => this.handleEmail(e),\n      onBlur: e => this.handleEmail(e),\n      label: \"Email\",\n      type: \"email\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.handleSubmit(),\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"REGISTER\"))));\n  }\n\n}\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/originals-user/src/Register.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","TextField","Button","Grid","Typography","Divider","styles","theme","root","width","display","padding","paper","margin","input","button","height","divider","Register","Component","constructor","props","state","email","emailErr","emailValidate","handleEmail","e","setState","target","value","reg","RegExp","test","handleSubmit","fetch","method","body","JSON","stringify","then","rsp","json","data","code","alert","message","history","push","catch","err","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\n\n\n\nconst styles = theme => ({\n    root: {width: 'auto', display: 'block', padding: '50px 0'},\n    paper: {width: 600, margin: 'auto', padding: 30,},\n    input: {width: 300},\n    button: {margin: '20px 0 0 10px', height: 42},\n    divider: {margin: '0 0 40px 0'}\n});\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            emailErr: false,\n            emailValidate: false\n        };\n    }\n    handleEmail(e) {\n        this.setState({\n            email: e.target.value,\n        });\n        let reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n        if(this.state.email !== \"\" && !reg.test(this.state.email)){\n            this.setState({\n                emailErr: true,\n                emailValidate: false\n            });\n        } else if (this.state.email === \"\") {\n            this.setState({\n                emailErr: false,\n                emailValidate: false\n            })\n        } else {\n            this.setState({\n                emailErr: false,\n                emailValidate: true\n            })\n        }\n    }\n    handleSubmit() {\n        if(this.state.emailValidate){\n            fetch(\"http://localhost:8080/user/auth/register\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: this.state.email\n                })\n            }).then(rsp => {\n                return rsp.json();\n            }).then(data => {\n                if (data.code === 200) {\n                    alert(data.message)\n                    this.props.history.push(\"/login\");\n                } else {\n                    this.setState({\n                        emailErr: false\n                    });\n                    alert(data.message);\n                }\n            }).catch(err => {\n                alert(err);\n            });\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" align=\"right\" gutterBottom>\n                        Register |  <a href=\"/login\">Login</a>\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Grid container justify=\"center\">\n                        <TextField id=\"standard-search\" error={this.state.emailErr} value={this.state.email} onChange={e => this.handleEmail(e)} onBlur={e => this.handleEmail(e)} label=\"Email\" type=\"email\" className={classes.input} margin=\"normal\"/>\n                        <Button onClick={() => this.handleSubmit()} variant=\"contained\" color=\"primary\" className={classes.button} size=\"large\">\n                            REGISTER\n                        </Button>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Register);\n"]},"metadata":{},"sourceType":"module"}