{"ast":null,"code":"import _objectWithoutProperties from \"/Users/stevez/gocode/src/originals/web/user/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/stevez/gocode/src/originals/web/user/src/MySnackbarContent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nfunction MySnackbarContent(props) {\n  const classes = props.classes,\n        className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"message\", \"onClose\", \"variant\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classNames(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nexport default withStyles(styles)(MySnackbarContent);","map":{"version":3,"sources":["/Users/stevez/gocode/src/originals/web/user/src/MySnackbarContent.js"],"names":["React","PropTypes","classNames","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","green","amber","IconButton","SnackbarContent","WarningIcon","withStyles","variantIcon","success","warning","error","info","styles","theme","backgroundColor","palette","dark","primary","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","MySnackbarContent","props","classes","className","onClose","variant","other","Icon","vertical","horizontal","close","propTypes","object","isRequired","string","node","func","oneOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            anchorOrigin={{vertical:\"top\", horizontal:\"center\"}}\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(MySnackbarContent);"]},"metadata":{},"sourceType":"module"}