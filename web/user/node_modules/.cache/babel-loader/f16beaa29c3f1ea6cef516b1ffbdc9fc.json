{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/www/src/Register.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst styles = () => ({\n  container: {\n    marginTop: 30\n  },\n  paper: {\n    maxWidth: 600,\n    margin: 'auto',\n    padding: 30\n  },\n  divider: {\n    margin: 0\n  },\n  grid: {\n    margin: '20px 0',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  formControl: {\n    width: '80%'\n  },\n  button: {\n    width: '30%',\n    height: 50\n  }\n});\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n      email: \"\",\n      emailErr: false,\n      emailValid: false\n    };\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n    let reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n\n    if (this.state.email !== \"\" && !reg.test(this.state.email)) {\n      this.setState({\n        emailErr: true,\n        emailValidate: false\n      });\n    } else if (this.state.email === \"\") {\n      this.setState({\n        emailErr: false,\n        emailValidate: false\n      });\n    } else {\n      this.setState({\n        emailErr: false,\n        emailValidate: true\n      });\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.emailValidate) {\n      this.setState({\n        disabled: true\n      });\n      fetch(\"http://www.koogo.net:8080/user/auth/register\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email\n        })\n      }).then(rsp => {\n        return rsp.json();\n      }).then(data => {\n        if (data.code === 200) {\n          alert(\"register success, an validation email has been send to your mail box\");\n          this.props.history.push(\"/login\");\n        } else {\n          this.setState({\n            disabled: false,\n            emailErr: true\n          });\n          alert(data.message);\n        }\n      }).catch(err => {\n        this.setState({\n          disabled: false\n        });\n        alert(err);\n      });\n    } else {\n      this.setState({\n        emailErr: true\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      color: \"textPrimary\",\n      align: \"right\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Register |  \", React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"column\",\n      className: classes.grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      error: this.state.emailErr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"register-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      id: \"register-email\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      \"aria-describedby\": \"register-email-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      id: \"register-email-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Error\")), React.createElement(Button, {\n      onClick: () => this.handleSubmit(),\n      disabled: this.state.disabled,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"REGISTER\"))));\n  }\n\n}\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/www/src/Register.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","TextField","Button","Grid","Typography","Divider","FormControl","FormHelperText","Input","InputLabel","styles","container","marginTop","paper","maxWidth","margin","padding","divider","grid","flexDirection","justifyContent","alignItems","formControl","width","button","height","Register","Component","constructor","props","state","disabled","email","emailErr","emailValid","handleEmail","e","setState","target","value","reg","RegExp","test","emailValidate","handleSubmit","fetch","method","headers","body","JSON","stringify","then","rsp","json","data","code","alert","history","push","message","catch","err","render","classes","name","handleChange","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAKA,MAAMC,MAAM,GAAG,OAAO;AAClBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ,GADO;AAKlBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,GADP;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,OAAO,EAAE;AAHN,GALW;AAUlBC,EAAAA,OAAO,EAAE;AACLF,IAAAA,MAAM,EAAE;AADH,GAVS;AAalBG,EAAAA,IAAI,EAAE;AACFH,IAAAA,MAAM,EAAE,QADN;AAEFI,IAAAA,aAAa,EAAE,QAFb;AAGFC,IAAAA,cAAc,EAAE,QAHd;AAIFC,IAAAA,UAAU,EAAE;AAJV,GAbY;AAmBlBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAnBK;AAsBlBC,EAAAA,MAAM,EAAE;AACJD,IAAAA,KAAK,EAAE,KADH;AAEJE,IAAAA,MAAM,EAAE;AAFJ;AAtBU,CAAP,CAAf;;AA4BA,MAAMC,QAAN,SAAuB9B,KAAK,CAAC+B,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,UAAU,EAAE;AAJH,KAAb;AAMH;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,SAAKC,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASC;AADN,KAAd;AAGA,QAAIC,GAAG,GAAG,IAAIC,MAAJ,CAAW,+EAAX,CAAV;;AACA,QAAG,KAAKX,KAAL,CAAWE,KAAX,KAAqB,EAArB,IAA2B,CAACQ,GAAG,CAACE,IAAJ,CAAS,KAAKZ,KAAL,CAAWE,KAApB,CAA/B,EAA0D;AACtD,WAAKK,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,IADA;AAEVU,QAAAA,aAAa,EAAE;AAFL,OAAd;AAIH,KALD,MAKO,IAAI,KAAKb,KAAL,CAAWE,KAAX,KAAqB,EAAzB,EAA6B;AAChC,WAAKK,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,KADA;AAEVU,QAAAA,aAAa,EAAE;AAFL,OAAd;AAIH,KALM,MAKA;AACH,WAAKN,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,KADA;AAEVU,QAAAA,aAAa,EAAE;AAFL,OAAd;AAIH;AACJ;;AACDC,EAAAA,YAAY,GAAG;AACX,QAAG,KAAKd,KAAL,CAAWa,aAAd,EAA4B;AACxB,WAAKN,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGAc,MAAAA,KAAK,CAAC,8CAAD,EAAiD;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFyC;AAKlDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBlB,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADD,SAAf;AAL4C,OAAjD,CAAL,CAQGmB,IARH,CAQQC,GAAG,IAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAVD,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB;AACnBC,UAAAA,KAAK,CAAC,sEAAD,CAAL;AACA,eAAK3B,KAAL,CAAW4B,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,SAHD,MAGO;AACH,eAAKrB,QAAL,CAAc;AACVN,YAAAA,QAAQ,EAAE,KADA;AAEVE,YAAAA,QAAQ,EAAE;AAFA,WAAd;AAIAuB,UAAAA,KAAK,CAACF,IAAI,CAACK,OAAN,CAAL;AACH;AACJ,OArBD,EAqBGC,KArBH,CAqBSC,GAAG,IAAI;AACZ,aAAKxB,QAAL,CAAc;AACVN,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGAyB,QAAAA,KAAK,CAACK,GAAD,CAAL;AACH,OA1BD;AA2BH,KA/BD,MA+BO;AACH,WAAKxB,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH;AACJ;;AACD6B,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKlC,KADpB,CACGkC,OADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACpD,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEoD,OAAO,CAAClD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,aAA9C;AAA4D,MAAA,KAAK,EAAC,OAAlE;AAA0E,MAAA,YAAY,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgB;AAAG,MAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADhB,CADJ,EAII,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAEkD,OAAO,CAAC9C,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,UAAU,EAAC,QAA5C;AAAqD,MAAA,SAAS,EAAE8C,OAAO,CAAC7C,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE6C,OAAO,CAACzC,WAAhC;AAA6C,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWG,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,gBADP;AAEI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWkC,IAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKC,YAHnB;AAII,0BAAiB,sBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CADJ,EAYI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKrB,YAAL,EAAvB;AAA4C,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWC,QAAjE;AAA2E,MAAA,OAAO,EAAC,WAAnF;AAA+F,MAAA,KAAK,EAAC,SAArG;AAA+G,MAAA,SAAS,EAAEgC,OAAO,CAACvC,MAAlI;AAA0I,MAAA,IAAI,EAAC,OAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,CALJ,CAFJ,CADJ;AA2BH;;AAnGkC;;AAsGvCE,QAAQ,CAACwC,SAAT,GAAqB;AACjBH,EAAAA,OAAO,EAAElE,SAAS,CAACsE,MAAV,CAAiBC;AADT,CAArB;AAIA,eAAetE,UAAU,CAACY,MAAD,CAAV,CAAmBgB,QAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n\n\n\nconst styles = () => ({\n    container: {\n        marginTop: 30\n\n    },\n    paper: {\n        maxWidth: 600,\n        margin: 'auto',\n        padding: 30,\n    },\n    divider: {\n        margin: 0\n    },\n    grid: {\n        margin: '20px 0',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    formControl: {\n        width: '80%',\n    },\n    button: {\n        width: '30%',\n        height: 50\n    }\n});\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            email: \"\",\n            emailErr: false,\n            emailValid: false\n        };\n    }\n    handleEmail(e) {\n        this.setState({\n            email: e.target.value,\n        });\n        let reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n        if(this.state.email !== \"\" && !reg.test(this.state.email)){\n            this.setState({\n                emailErr: true,\n                emailValidate: false\n            });\n        } else if (this.state.email === \"\") {\n            this.setState({\n                emailErr: false,\n                emailValidate: false\n            })\n        } else {\n            this.setState({\n                emailErr: false,\n                emailValidate: true\n            })\n        }\n    }\n    handleSubmit() {\n        if(this.state.emailValidate){\n            this.setState({\n                disabled: true\n            });\n            fetch(\"http://www.koogo.net:8080/user/auth/register\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.state.email\n                })\n            }).then(rsp => {\n                return rsp.json();\n            }).then(data => {\n                if (data.code === 200) {\n                    alert(\"register success, an validation email has been send to your mail box\")\n                    this.props.history.push(\"/login\");\n                } else {\n                    this.setState({\n                        disabled: false,\n                        emailErr: true\n                    });\n                    alert(data.message);\n                }\n            }).catch(err => {\n                this.setState({\n                    disabled: false\n                });\n                alert(err);\n            });\n        } else {\n            this.setState({\n                emailErr: true\n            });\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container}>\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" align=\"right\" gutterBottom>\n                        Register |  <a href=\"/login\">Login</a>\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Grid container justify=\"center\" alignItems=\"column\" className={classes.grid}>\n                        <FormControl className={classes.formControl} error={this.state.emailErr}>\n                            <InputLabel htmlFor=\"register-email\">Email</InputLabel>\n                            <Input\n                                id=\"register-email\"\n                                value={this.state.name}\n                                onChange={this.handleChange}\n                                aria-describedby=\"register-email-error\"\n                            />\n\n                            <FormHelperText id=\"register-email-error\">Error</FormHelperText>\n                        </FormControl>\n                        <Button onClick={() => this.handleSubmit()} disabled={this.state.disabled} variant=\"contained\" color=\"primary\" className={classes.button} size=\"large\">\n                            REGISTER\n                        </Button>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Register);\n"]},"metadata":{},"sourceType":"module"}