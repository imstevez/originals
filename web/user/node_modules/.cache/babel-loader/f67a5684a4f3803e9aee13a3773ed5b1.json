{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/src/Register.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  container: {\n    height: '100vh',\n    background: 'linear-gradient(to right, #348AC7, #7474BF);',\n    overflow: 'hidden'\n  },\n  progress: {\n    position: 'fixed',\n    width: '100%',\n    background: 'transparent'\n  },\n  paper: {\n    maxWidth: 400,\n    margin: '50px auto',\n    padding: '20px 0 40px 0'\n  },\n  typography: {\n    textAlign: 'center',\n    fontSize: '18px',\n    lineHeight: '18px'\n  },\n  cloud: {\n    fontSize: 70,\n    lineHeight: 70\n  },\n  divider: {\n    margin: '15px 0 40px 0'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textField: {\n    width: '70%'\n  },\n  button: {\n    fontSize: '18px',\n    height: 45,\n    width: '40%',\n    marginTop: 20,\n    marginBottom: 5\n  }\n});\n\nconst registerApi = \"http://www.koogo.net:8080/user/auth/register\";\n\nconst verifyEmail = function (email) {\n  let reg = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/;\n  return reg.test(email);\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInfoClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      let orInfo = this.state.info;\n      orInfo.open = false;\n      this.setState({\n        info: orInfo\n      });\n    };\n\n    this.state = {\n      info: {\n        open: false,\n        variant: \"success\",\n        message: \"\"\n      },\n      infoOpen: true,\n      email: \"\",\n      emailErr: false,\n      disabled: false\n    };\n  }\n\n  handleEmail(e) {\n    let emailValue = e.target.value;\n\n    if (emailValue === \"\") {\n      this.setState({\n        email: \"\",\n        emailErr: false\n      });\n      return;\n    }\n\n    if (emailValue !== \"\") {\n      if (!verifyEmail(emailValue)) {\n        this.setState({\n          email: emailValue,\n          emailErr: true\n        });\n      } else {\n        this.setState({\n          email: emailValue,\n          emailErr: false\n        });\n      }\n    }\n  }\n\n  handleRegister() {\n    if (!this.state.email) {\n      this.setState({\n        emailErr: true,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"邮箱不能为空!\"\n        }\n      });\n      return;\n    }\n\n    if (this.state.emailErr) {\n      this.setState({\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"邮箱格式错误\"\n        }\n      });\n      return;\n    }\n\n    fetch(registerApi, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email\n      })\n    }).then(rsp => {\n      if (rsp.status === 200) {\n        return rsp.json();\n      } else {\n        return {\n          code: rsp.status,\n          message: \"internal error\"\n        };\n      }\n    }).then(data => {\n      if (data.code === 200) {\n        this.setState({\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"success\",\n            message: \"注册成功, 验证链接已发送至您的邮箱, 请前往完成注册!\"\n          }\n        });\n        this.setState({\n          email: \"\"\n        });\n        return;\n      }\n\n      if (data.code === 300) {\n        this.setState({\n          emailErr: true,\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"error\",\n            message: \"邮箱格式不正确!\"\n          }\n        });\n        return;\n      }\n\n      if (data.code === 301) {\n        this.setState({\n          emailErr: true,\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"error\",\n            message: \"该邮箱已被注册!\"\n          }\n        });\n        return;\n      }\n\n      if (data.code === 302) {\n        this.setState({\n          passwordErr: true,\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"error\",\n            message: \"验证邮件发送失败, 请稍后再试\"\n          }\n        });\n        return;\n      }\n\n      this.setState({\n        disabled: false,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"系统错误: \" + data.message\n        }\n      });\n    }).catch(err => {\n      alert(err);\n      this.setState({\n        disabled: false,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"网络错误: \" + err\n        }\n      });\n    });\n    this.setState({\n      disabled: true\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      onKeyPress: e => {\n        if (e.KeyCode === 13) {\n          this.handleRegister();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(LinearProgress, {\n      hidden: !this.state.disabled,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: this.state.info.open,\n      autoHideDuration: 1000,\n      onClose: this.handleInfoClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(MySnackbarContent, {\n      onClose: this.handleInfoClose,\n      variant: this.state.info.variant,\n      message: this.state.info.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      color: \"primary\",\n      className: classes.typography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Cloud, {\n      className: classes.cloud,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), \"\\u6211\\u8BB0 \\u25CF \\u4E91\\u8D26\\u672C\"), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: classes.textField,\n      id: \"login-email\",\n      variant: \"filled\",\n      label: \"\\u90AE\\u7BB1\",\n      autoComplete: \"off\",\n      value: this.state.email,\n      onChange: e => this.handleEmail(e),\n      onBlur: e => this.handleEmail(e),\n      error: this.state.emailErr,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: () => this.handleRegister(),\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(Link, {\n      component: \"button\",\n      variant: \"body2\",\n      onClick: () => {\n        this.props.history.push(\"/login\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"\\u5DF2\\u6CE8\\u518C, \\u767B\\u9646\"))));\n  }\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/src/Register.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","Button","Typography","Divider","Cloud","TextField","MySnackbarContent","Snackbar","LinearProgress","Link","styles","theme","container","height","background","overflow","progress","position","width","paper","maxWidth","margin","padding","typography","textAlign","fontSize","lineHeight","cloud","divider","form","display","flexDirection","justifyContent","alignItems","textField","button","marginTop","marginBottom","registerApi","verifyEmail","email","reg","test","Login","Component","constructor","props","handleInfoClose","event","reason","orInfo","state","info","open","setState","variant","message","infoOpen","emailErr","disabled","handleEmail","e","emailValue","target","value","handleRegister","fetch","method","headers","body","JSON","stringify","then","rsp","status","json","code","data","passwordErr","catch","err","alert","render","classes","KeyCode","vertical","horizontal","history","push","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAIA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACvBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAE,OADD;AAEPC,IAAAA,UAAU,EAAE,8CAFL;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GADY;AAMvBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,OADJ;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNJ,IAAAA,UAAU,EAAE;AAHN,GANa;AAWvBK,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,GADP;AAEHC,IAAAA,MAAM,EAAE,WAFL;AAGHC,IAAAA,OAAO,EAAE;AAHN,GAXgB;AAgBvBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAE,QADH;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAhBW;AAqBvBC,EAAAA,KAAK,EAAE;AACHF,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE;AAFT,GArBgB;AAyBvBE,EAAAA,OAAO,EAAE;AACLP,IAAAA,MAAM,EAAE;AADH,GAzBc;AA4BvBQ,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,aAAa,EAAE,QAFb;AAGFC,IAAAA,cAAc,EAAE,QAHd;AAIFC,IAAAA,UAAU,EAAE;AAJV,GA5BiB;AAkCvBC,EAAAA,SAAS,EAAE;AACPhB,IAAAA,KAAK,EAAE;AADA,GAlCY;AAqCvBiB,EAAAA,MAAM,EAAE;AACJV,IAAAA,QAAQ,EAAE,MADN;AAEJZ,IAAAA,MAAM,EAAE,EAFJ;AAGJK,IAAAA,KAAK,EAAE,KAHH;AAIJkB,IAAAA,SAAS,EAAE,EAJP;AAKJC,IAAAA,YAAY,EAAE;AALV;AArCe,CAAZ,CAAf;;AA8CA,MAAMC,WAAW,GAAG,8CAApB;;AACA,MAAMC,WAAW,GAAG,UAASC,KAAT,EAAe;AAC/B,MAAIC,GAAG,GAAG,+EAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,KAAT,CAAP;AACH,CAHD;;AAKA,MAAMG,KAAN,SAAoB/C,KAAK,CAACgD,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqCnBC,eArCmB,GAqCD,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AACD,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAxB;AACAF,MAAAA,MAAM,CAACG,IAAP,GAAc,KAAd;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAEF;AADI,OAAd;AAGH,KA9CkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,KADJ;AAEFE,QAAAA,OAAO,EAAE,SAFP;AAGFC,QAAAA,OAAO,EAAE;AAHP,OADG;AAMTC,MAAAA,QAAQ,EAAE,IAND;AAOTjB,MAAAA,KAAK,EAAE,EAPE;AAQTkB,MAAAA,QAAQ,EAAE,KARD;AASTC,MAAAA,QAAQ,EAAE;AATD,KAAb;AAWH;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;;AACA,QAAIF,UAAU,KAAK,EAAnB,EAAuB;AACnB,WAAKR,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAE,EADG;AAEVkB,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIA;AACH;;AACD,QAAII,UAAU,KAAK,EAAnB,EAAuB;AACnB,UAAI,CAACvB,WAAW,CAACuB,UAAD,CAAhB,EAA8B;AAC1B,aAAKR,QAAL,CAAc;AACVd,UAAAA,KAAK,EAAEsB,UADG;AAEVJ,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAIH,OALD,MAKO;AACH,aAAKJ,QAAL,CAAc;AACVd,UAAAA,KAAK,EAAEsB,UADG;AAEVJ,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAIH;AACJ;AACJ;;AAWDO,EAAAA,cAAc,GAAG;AACb,QAAI,CAAC,KAAKd,KAAL,CAAWX,KAAhB,EAAuB;AACnB,WAAKc,QAAL,CAAc;AACVI,QAAAA,QAAQ,EAAE,IADA;AAEVN,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,IADJ;AAEFE,UAAAA,OAAO,EAAE,OAFP;AAGFC,UAAAA,OAAO,EAAE;AAHP;AAFI,OAAd;AAQA;AACH;;AACD,QAAI,KAAKL,KAAL,CAAWO,QAAf,EAAyB;AACrB,WAAKJ,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,IADJ;AAEFE,UAAAA,OAAO,EAAE,OAFP;AAGFC,UAAAA,OAAO,EAAE;AAHP;AADI,OAAd;AAOA;AACH;;AACDU,IAAAA,KAAK,CAAC5B,WAAD,EAAc;AACf6B,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFM;AAKfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB/B,QAAAA,KAAK,EAAE,KAAKW,KAAL,CAAWX;AADD,OAAf;AALS,KAAd,CAAL,CAQGgC,IARH,CAQQC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACnB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,OAFD,MAEO;AACH,eAAO;AACHC,UAAAA,IAAI,EAAEH,GAAG,CAACC,MADP;AAEHlB,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;AACJ,KAjBD,EAiBGgB,IAjBH,CAiBQK,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACD,IAAL,KAAc,GAAjB,EAAsB;AAClB,aAAKtB,QAAL,CAAc;AACVK,UAAAA,QAAQ,EAAE,KADA;AAEVP,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,IADJ;AAEFE,YAAAA,OAAO,EAAE,SAFP;AAGFC,YAAAA,OAAO,EAAE;AAHP;AAFI,SAAd;AAQA,aAAKF,QAAL,CAAc;AACVd,UAAAA,KAAK,EAAE;AADG,SAAd;AAGA;AACH;;AACD,UAAGqC,IAAI,CAACD,IAAL,KAAc,GAAjB,EAAsB;AAClB,aAAKtB,QAAL,CAAc;AACVI,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,QAAQ,EAAE,KAFA;AAGVP,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,IADJ;AAEFE,YAAAA,OAAO,EAAE,OAFP;AAGFC,YAAAA,OAAO,EAAE;AAHP;AAHI,SAAd;AASA;AACH;;AACD,UAAGqB,IAAI,CAACD,IAAL,KAAc,GAAjB,EAAsB;AAClB,aAAKtB,QAAL,CAAc;AACVI,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,QAAQ,EAAE,KAFA;AAGVP,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,IADJ;AAEFE,YAAAA,OAAO,EAAE,OAFP;AAGFC,YAAAA,OAAO,EAAE;AAHP;AAHI,SAAd;AASA;AACH;;AACD,UAAGqB,IAAI,CAACD,IAAL,KAAc,GAAjB,EAAsB;AAClB,aAAKtB,QAAL,CAAc;AACVwB,UAAAA,WAAW,EAAE,IADH;AAEVnB,UAAAA,QAAQ,EAAE,KAFA;AAGVP,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,IADJ;AAEFE,YAAAA,OAAO,EAAE,OAFP;AAGFC,YAAAA,OAAO,EAAE;AAHP;AAHI,SAAd;AASA;AACH;;AAED,WAAKF,QAAL,CAAc;AACVK,QAAAA,QAAQ,EAAE,KADA;AAEVP,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,IADJ;AAEFE,UAAAA,OAAO,EAAE,OAFP;AAGFC,UAAAA,OAAO,EAAE,WAAWqB,IAAI,CAACrB;AAHvB;AAFI,OAAd;AAQH,KA7ED,EA6EGuB,KA7EH,CA6ESC,GAAG,IAAI;AACZC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACA,WAAK1B,QAAL,CAAc;AACVK,QAAAA,QAAQ,EAAE,KADA;AAEVP,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,IADJ;AAEFE,UAAAA,OAAO,EAAE,OAFP;AAGFC,UAAAA,OAAO,EAAE,WAAWwB;AAHlB;AAFI,OAAd;AAQH,KAvFD;AAwFA,SAAK1B,QAAL,CAAc;AACVK,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGH;;AACDuB,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKrC,KADpB,CACGqC,OADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACvE,SAAxB;AAAmC,MAAA,UAAU,EAAEiD,CAAC,IAAI;AAChD,YAAGA,CAAC,CAACuB,OAAF,KAAc,EAAjB,EAAqB;AACjB,eAAKnB,cAAL;AACH;AACJ,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWQ,QAApC;AAA8C,MAAA,SAAS,EAAEwB,OAAO,CAACnE,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAE;AACVqE,QAAAA,QAAQ,EAAE,KADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OADlB;AAKI,MAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC,IAAX,CAAgBC,IAL1B;AAMI,MAAA,gBAAgB,EAAE,IANtB;AAOI,MAAA,OAAO,EAAE,KAAKN,eAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASI,oBAAC,iBAAD;AACI,MAAA,OAAO,EAAE,KAAKA,eADlB;AAEI,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWC,IAAX,CAAgBG,OAF7B;AAGI,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,OAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAPJ,EAsBI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE2B,OAAO,CAAChE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAC,IADd;AAEI,MAAA,OAAO,EAAC,IAFZ;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,SAAS,EAAEgE,OAAO,CAAC5D,UAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE4D,OAAO,CAACxD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAMsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANtC,2CADJ,EASI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAEwD,OAAO,CAACvD,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAM,MAAA,SAAS,EAAEuD,OAAO,CAACtD,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,SAAS,EAAEsD,OAAO,CAACjD,SADvB;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAC,QAHZ;AAII,MAAA,KAAK,EAAC,cAJV;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWX,KANtB;AAOI,MAAA,QAAQ,EAAEqB,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAPnB;AAQI,MAAA,MAAM,EAAEA,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CARjB;AASI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWO,QATtB;AAUI,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,QAVzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAaI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,UADZ;AACuB,MAAA,KAAK,EAAC,SAD7B;AAEI,MAAA,SAAS,EAAEwB,OAAO,CAAChD,MAFvB;AAGI,MAAA,OAAO,EAAE,MAAM,KAAK8B,cAAL,EAHnB;AAII,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWQ,QAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ,EAqBI,oBAAC,IAAD;AACI,MAAA,SAAS,EAAC,QADd;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,OAAO,EAAE,MAAM;AACX,aAAKb,KAAL,CAAWyC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CArBJ,CAVJ,CAtBJ,CADJ;AAmEH;;AAvO+B;;AA0OpC7C,KAAK,CAAC8C,SAAN,GAAkB;AACdN,EAAAA,OAAO,EAAEtF,SAAS,CAAC6F,MAAV,CAAiBC;AADZ,CAAlB;AAIA,eAAe7F,UAAU,CAACY,MAAD,CAAV,CAAmBiC,KAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Link from '@material-ui/core/Link';\n\n\n\nconst styles = (theme) => ({\n    container: {\n        height: '100vh',\n        background: 'linear-gradient(to right, #348AC7, #7474BF);',\n        overflow: 'hidden'\n    },\n    progress: {\n        position: 'fixed',\n        width: '100%',\n        background: 'transparent'\n    },\n    paper: {\n        maxWidth: 400,\n        margin: '50px auto',\n        padding: '20px 0 40px 0',\n    },\n    typography: {\n        textAlign: 'center',\n        fontSize: '18px',\n        lineHeight: '18px'\n    },\n    cloud: {\n        fontSize: 70,\n        lineHeight: 70,\n    },\n    divider: {\n        margin: '15px 0 40px 0'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textField: {\n        width: '70%'\n    },\n    button: {\n        fontSize: '18px',\n        height: 45,\n        width: '40%',\n        marginTop: 20,\n        marginBottom: 5,\n    }\n});\n\nconst registerApi = \"http://www.koogo.net:8080/user/auth/register\";\nconst verifyEmail = function(email){\n    let reg = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/;\n    return reg.test(email);\n};\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: {\n                open: false,\n                variant: \"success\",\n                message: \"\"\n            },\n            infoOpen: true,\n            email: \"\",\n            emailErr: false,\n            disabled: false,\n        }\n    }\n    handleEmail(e) {\n        let emailValue = e.target.value;\n        if (emailValue === \"\") {\n            this.setState({\n                email: \"\",\n                emailErr: false\n            });\n            return;\n        }\n        if (emailValue !== \"\") {\n            if (!verifyEmail(emailValue)) {\n                this.setState({\n                    email: emailValue,\n                    emailErr: true\n                });\n            } else {\n                this.setState({\n                    email: emailValue,\n                    emailErr: false\n                });\n            }\n        }\n    }\n    handleInfoClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        let orInfo = this.state.info;\n        orInfo.open = false;\n        this.setState({\n            info: orInfo\n        });\n    };\n    handleRegister() {\n        if (!this.state.email) {\n            this.setState({\n                emailErr: true,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"邮箱不能为空!\"\n                }\n            });\n            return;\n        }\n        if (this.state.emailErr) {\n            this.setState({\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"邮箱格式错误\"\n                }\n            });\n            return;\n        }\n        fetch(registerApi, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n            })\n        }).then(rsp => {\n            if(rsp.status === 200) {\n                return rsp.json();\n            } else {\n                return {\n                    code: rsp.status,\n                    message: \"internal error\"\n                }\n            }\n        }).then(data => {\n            if(data.code === 200) {\n                this.setState({\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"success\",\n                        message: \"注册成功, 验证链接已发送至您的邮箱, 请前往完成注册!\"\n                    }\n                });\n                this.setState({\n                    email: \"\",\n                });\n                return;\n            }\n            if(data.code === 300) {\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"邮箱格式不正确!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 301) {\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"该邮箱已被注册!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 302) {\n                this.setState({\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"验证邮件发送失败, 请稍后再试\"\n                    }\n                });\n                return;\n            }\n\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"系统错误: \" + data.message\n                }\n            });\n        }).catch(err => {\n            alert(err);\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"网络错误: \" + err\n                }\n            });\n        });\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container} onKeyPress={e => {\n                if(e.KeyCode === 13) {\n                    this.handleRegister();\n                }\n            }}>\n                <CssBaseline/>\n                <LinearProgress hidden={!this.state.disabled} className={classes.progress} />\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.info.open}\n                    autoHideDuration={1000}\n                    onClose={this.handleInfoClose}\n                >\n                    <MySnackbarContent\n                        onClose={this.handleInfoClose}\n                        variant={this.state.info.variant}\n                        message={this.state.info.message}\n                    />\n                </Snackbar>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        className={classes.typography}\n                    >\n                        <Cloud className={classes.cloud}/><br/>我记 ● 云账本\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <form className={classes.form}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"login-email\"\n                            variant=\"filled\"\n                            label=\"邮箱\"\n                            autoComplete=\"off\"\n                            value={this.state.email}\n                            onChange={e => this.handleEmail(e)}\n                            onBlur={e => this.handleEmail(e)}\n                            error={this.state.emailErr}\n                            disabled={this.state.disabled}\n                        />\n                        <Button\n                            variant=\"outlined\" color=\"primary\"\n                            className={classes.button}\n                            onClick={() => this.handleRegister()}\n                            disabled={this.state.disabled}\n                        >\n                            注册\n                        </Button>\n                        <Link\n                            component=\"button\"\n                            variant=\"body2\"\n                            onClick={() => {\n                                this.props.history.push(\"/login\");\n                            }}\n                        >\n                            已注册, 登陆\n                        </Link>\n                    </form>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}