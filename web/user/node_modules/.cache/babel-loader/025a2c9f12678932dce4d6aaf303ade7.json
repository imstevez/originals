{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/originals-user/src/Complete.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n  root: {\n    width: 'auto',\n    display: 'block',\n    padding: '50px 0'\n  },\n  paper: {\n    width: 600,\n    margin: 'auto',\n    padding: '40px 30px'\n  },\n  input: {\n    width: 400\n  },\n  button: {\n    margin: 20,\n    width: 150\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  divider: {\n    margin: '0 0 20px 0'\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 100,\n    height: 100,\n    cursor: 'pointer'\n  },\n  fileInput: {\n    display: 'none'\n  }\n});\n\nclass Complete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        token: \"\",\n        email: \"\",\n        nickname: \"\",\n        password: \"\",\n        avatar: \"go.jpg\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    let payload = this.props.match.params.token.split(\".\")[1];\n    let tokenObj = JSON.parse(atob(payload));\n    console.log(new Date().getTime());\n    console.log(tokenObj.exp);\n\n    if (!tokenObj.email) {\n      alert(\"email invalid\");\n    }\n\n    let now = new Date();\n    console.log(atob(payload));\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Complete\"), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.fileInput,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: this.state.data.avatar,\n      className: classes.bigAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-search\",\n      disabled: true,\n      label: \"Email\",\n      type: \"text\",\n      value: this.state.data.email,\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-search\",\n      label: \"Nickname\",\n      type: \"text\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-search\",\n      label: \"Password\",\n      type: \"password\",\n      className: classes.input,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"COMPLETE\"))));\n  }\n\n}\n\nComplete.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Complete);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/originals-user/src/Complete.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","TextField","Button","Grid","Typography","Divider","Avatar","styles","theme","root","width","display","padding","paper","margin","input","button","rightIcon","marginLeft","spacing","unit","divider","bigAvatar","height","cursor","fileInput","Complete","Component","constructor","props","state","data","token","email","nickname","password","avatar","componentDidMount","payload","match","params","split","tokenObj","JSON","parse","atob","console","log","Date","getTime","exp","alert","now","render","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n    root: {width: 'auto', display: 'block',padding: '50px 0'},\n    paper: {width: 600, margin: 'auto', padding: '40px 30px',},\n    input: {width: 400},\n    button: {margin: 20, width: 150,},\n    rightIcon: {marginLeft: theme.spacing.unit,},\n    divider: {margin: '0 0 20px 0'},\n    bigAvatar: {margin: 10, width: 100, height: 100, cursor: 'pointer'},\n    fileInput: {display: 'none',},\n});\n\nclass Complete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                token: \"\",\n                email: \"\",\n                nickname: \"\",\n                password: \"\",\n                avatar: \"go.jpg\"\n            }\n        }\n    }\n    componentDidMount() {\n        let payload = this.props.match.params.token.split(\".\")[1];\n        let tokenObj = JSON.parse(atob(payload));\n        console.log((new Date()).getTime());\n        console.log(tokenObj.exp);\n        if (!tokenObj.email) {\n            alert(\"email invalid\");\n        }\n        let now = (new Date())\n        console.log(atob(payload));\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <Paper className={classes.paper} elevation={1}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\n                        Complete\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Grid container justify=\"center\">\n                        <input\n                            accept=\"image/*\"\n                            className={classes.fileInput}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Avatar alt=\"Remy Sharp\" src={this.state.data.avatar} className={classes.bigAvatar} />\n                        </label>\n                    </Grid>\n                    <Grid container justify=\"center\">\n                        <TextField id=\"standard-search\" disabled label=\"Email\" type=\"text\" value={this.state.data.email} className={classes.input} margin=\"normal\"/>\n                        <TextField id=\"standard-search\" label=\"Nickname\" type=\"text\" className={classes.input} margin=\"normal\"/>\n                        <TextField id=\"standard-search\" label=\"Password\" type=\"password\" className={classes.input} margin=\"normal\"/>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} size=\"large\">\n                            COMPLETE\n                        </Button>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nComplete.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Complete);\n"]},"metadata":{},"sourceType":"module"}