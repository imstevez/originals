{"ast":null,"code":"var _jsxFileName = \"/home/steve/go/src/originals/web/user/src/Complete.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\nconst styles = theme => ({\n  container: {\n    height: '100vh',\n    background: 'linear-gradient(to right, #348AC7, #7474BF);',\n    overflow: 'hidden'\n  },\n  progress: {\n    position: 'fixed',\n    width: '100%',\n    background: 'transparent'\n  },\n  paper: {\n    maxWidth: 400,\n    margin: '50px auto',\n    padding: '20px 0 40px 0'\n  },\n  typography: {\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    fontSize: '18px',\n    lineHeight: '40px'\n  },\n  cloud: {\n    verticalAlign: 'top',\n    fontSize: '35px',\n    marginRight: 10\n  },\n  divider: {\n    margin: '0 0 20px 0'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textField: {\n    width: '70%',\n    background: 'transparent'\n  },\n  avatarLabel: {\n    textAlign: 'center',\n    cursor: 'pointer',\n    marginBottom: 10\n  },\n  button: {\n    fontSize: '18px',\n    height: 45,\n    width: '40%',\n    marginTop: 30,\n    marginBottom: 5\n  },\n  bigAvatar: {\n    width: 100,\n    height: 100,\n    cursor: 'pointer'\n  },\n  fileInput: {\n    display: 'none'\n  }\n});\n\nconst completeApi = \"http://www.koogo.net:8080/user/auth/complete\";\nconst storage = window.localStorage;\n\nclass Complete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInfoClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      let orInfo = this.state.info;\n      orInfo.open = false;\n      this.setState({\n        info: orInfo\n      });\n    };\n\n    this.handleKeyDown = e => {\n      if (e.keyCode === 13) {\n        this.handleLogin();\n        e.preventDefault();\n      }\n    };\n\n    this.state = {\n      info: {\n        open: false,\n        variant: \"success\",\n        message: \"\"\n      },\n      avatar: null,\n      email: \"stevzhang01@gmail.com\",\n      nickname: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      nicknameErr: false,\n      passwordErr: false,\n      passwordConfirmErr: false,\n      disabled: false\n    };\n  }\n\n  handleNickname(e) {\n    let nicknameValue = e.target.value;\n\n    if (nicknameValue === \"\") {\n      this.setState({\n        nickname: \"\",\n        nicknameErr: false\n      });\n      return;\n    }\n\n    if (nicknameValue.length < 4) {\n      this.setState({\n        nickname: nicknameValue,\n        nicknameErr: true\n      });\n      return;\n    }\n\n    this.setState({\n      nicknameValue: nicknameValue,\n      nicknameErr: false\n    });\n  }\n\n  handlePassword(e) {\n    let passwordValue = e.target.value;\n\n    if (passwordValue === \"\") {\n      this.setState({\n        password: \"\",\n        passwordErr: false\n      });\n      return;\n    }\n\n    if (passwordValue.length < 4) {\n      this.setState({\n        password: passwordValue,\n        passwordErr: true\n      });\n      return;\n    }\n\n    this.setState({\n      password: passwordValue,\n      passwordErr: false\n    });\n  }\n\n  handlePasswordConfirm(e) {\n    let passwordConfirmValue = e.target.value;\n\n    if (passwordConfirmValue !== this.state.password) {\n      this.setState({\n        passwordConfirmValue: passwordConfirmValue,\n        passwordConfirmErr: true\n      });\n      return;\n    }\n\n    this.setState({\n      passwordConfirmValue: passwordConfirmValue,\n      passwordConfirmErr: false\n    });\n  }\n\n  handleComplete() {\n    if (!this.state.email) {\n      this.setState({\n        emailErr: true,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"密码不能为空!\"\n        }\n      });\n      return;\n    }\n\n    if (!this.state.password) {\n      this.setState({\n        passwordErr: true,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"密码不能为空!\"\n        }\n      });\n      return;\n    }\n\n    fetch(completeApi, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(rsp => {\n      if (rsp.status === 200) {\n        let token = rsp.headers.get(\"X-Login-token\");\n        storage.token = token;\n        return rsp.json();\n      } else {\n        return {\n          code: rsp.status,\n          message: \"internal error\"\n        };\n      }\n    }).then(data => {\n      if (data.code === 200) {\n        this.setState({\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"success\",\n            message: \"登陆成功!\"\n          }\n        });\n        let that = this;\n        setTimeout(function () {\n          that.props.history.push(\"/profile\");\n        }, 1000);\n        return;\n      }\n\n      if (data.code === 300) {\n        this.setState({\n          emailErr: true,\n          passwordErr: true,\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"error\",\n            message: \"邮箱或密码格式不正确!\"\n          }\n        });\n        return;\n      }\n\n      if (data.code === 303) {\n        this.setState({\n          emailErr: true,\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"error\",\n            message: \"用户不存在!\"\n          }\n        });\n        return;\n      }\n\n      if (data.code === 304) {\n        this.setState({\n          passwordErr: true,\n          disabled: false,\n          info: {\n            open: true,\n            variant: \"error\",\n            message: \"密码错误!\"\n          }\n        });\n        return;\n      }\n\n      this.setState({\n        disabled: false,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"未知错误!\"\n        }\n      });\n    }).catch(err => {\n      alert(err);\n      this.setState({\n        disabled: false,\n        info: {\n          open: true,\n          variant: \"error\",\n          message: \"网络错误: \" + err\n        }\n      });\n    });\n    this.setState({\n      disabled: true\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      onSubmit: e => {\n        alert(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(LinearProgress, {\n      hidden: !this.state.disabled,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: this.state.info.open,\n      autoHideDuration: 1000,\n      onClose: this.handleInfoClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(MySnackbarContent, {\n      onClose: this.handleInfoClose,\n      variant: this.state.info.variant,\n      message: this.state.info.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      color: \"primary\",\n      className: classes.typography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Cloud, {\n      className: classes.cloud,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), \"\\u6211\\u8BB0 \\u25CF \\u4E91\\u8D26\\u672C\"), React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: classes.form,\n      onKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.fileInput,\n      id: \"avatar-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: e => this.handleAvatar(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"avatar-file\",\n      className: classes.avatarLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"\",\n      src: \"http://www.koogo.net:8080/user/statics/avatar/avatar_default.png\",\n      className: classes.bigAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(Link, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"\\u70B9\\u51FB\\u4E0A\\u4F20\"))), React.createElement(TextField, {\n      className: classes.textField,\n      id: \"complete-nickname\",\n      variant: \"filled\",\n      label: \"\\u6635\\u79F0\",\n      autoComplete: \"off\",\n      defaultValue: this.state.nickname,\n      error: this.state.nicknameErr,\n      disabled: this.state.disabled,\n      onChange: e => this.handleNickname(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.textField,\n      variant: \"filled\",\n      label: \"\\u90AE\\u7BB1\",\n      autoComplete: \"off\",\n      defaultValue: this.state.email,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.textField,\n      id: \"complete-password\",\n      variant: \"filled\",\n      label: \"\\u5BC6\\u7801\",\n      autoComplete: \"new-password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: e => this.handlePassword(e),\n      onBlur: e => this.handlePassword(e),\n      error: this.state.passwordErr,\n      disabled: this.state.disabled,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.textField,\n      id: \"complete-password-confirm\",\n      variant: \"filled\",\n      label: \"\\u5BC6\\u7801\\u786E\\u8BA4\",\n      autoComplete: \"new-password\",\n      type: \"password\",\n      value: this.state.passwordConfirm,\n      onChange: e => this.handlePasswordConfirm(e),\n      onBlur: e => this.handlePassword(e),\n      error: this.state.passwordConfirmErr,\n      disabled: this.state.disabled,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.handleComplete,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"\\u5B8C\\u6210\\u6CE8\\u518C\"))));\n  }\n\n}\n\nComplete.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Complete);","map":{"version":3,"sources":["/home/steve/go/src/originals/web/user/src/Complete.js"],"names":["React","PropTypes","withStyles","Paper","CssBaseline","Button","Typography","Divider","Cloud","TextField","MySnackbarContent","Snackbar","LinearProgress","Avatar","Grid","Link","styles","theme","container","height","background","overflow","progress","position","width","paper","maxWidth","margin","padding","typography","textAlign","verticalAlign","fontSize","lineHeight","cloud","marginRight","divider","form","display","flexDirection","justifyContent","alignItems","textField","avatarLabel","cursor","marginBottom","button","marginTop","bigAvatar","fileInput","completeApi","storage","window","localStorage","Complete","Component","constructor","props","handleInfoClose","event","reason","orInfo","state","info","open","setState","handleKeyDown","e","keyCode","handleLogin","preventDefault","variant","message","avatar","email","nickname","password","passwordConfirm","nicknameErr","passwordErr","passwordConfirmErr","disabled","handleNickname","nicknameValue","target","value","length","handlePassword","passwordValue","handlePasswordConfirm","passwordConfirmValue","handleComplete","emailErr","fetch","method","headers","body","JSON","stringify","then","rsp","status","token","get","json","code","data","that","setTimeout","history","push","catch","err","alert","render","classes","vertical","horizontal","handleAvatar","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Cloud from '@material-ui/icons/Cloud';\nimport TextField from '@material-ui/core/TextField';\nimport MySnackbarContent from './MySnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\n\n\nconst styles = (theme) => ({\n    container: {\n        height: '100vh',\n        background: 'linear-gradient(to right, #348AC7, #7474BF);',\n        overflow: 'hidden'\n    },\n    progress: {\n        position: 'fixed',\n        width: '100%',\n        background: 'transparent'\n    },\n    paper: {\n        maxWidth: 400,\n        margin: '50px auto',\n        padding: '20px 0 40px 0',\n    },\n    typography: {\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        fontSize: '18px',\n        lineHeight: '40px'\n    },\n    cloud: {\n        verticalAlign: 'top',\n        fontSize: '35px',\n        marginRight: 10\n    },\n    divider: {\n        margin: '0 0 20px 0'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textField: {\n        width: '70%',\n        background: 'transparent'\n    },\n    avatarLabel: {\n        textAlign: 'center',\n        cursor: 'pointer',\n        marginBottom: 10\n    },\n    button: {\n        fontSize: '18px',\n        height: 45,\n        width: '40%',\n        marginTop: 30,\n        marginBottom: 5,\n    },\n    bigAvatar: {width: 100, height: 100, cursor: 'pointer'},\n    fileInput: {display: 'none',},\n});\n\nconst completeApi = \"http://www.koogo.net:8080/user/auth/complete\";\nconst storage = window.localStorage;\n\nclass Complete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: {\n                open: false,\n                variant: \"success\",\n                message: \"\"\n            },\n            avatar: null,\n            email: \"stevzhang01@gmail.com\",\n            nickname: \"\",\n            password: \"\",\n            passwordConfirm: \"\",\n            nicknameErr: false,\n            passwordErr: false,\n            passwordConfirmErr: false,\n            disabled: false,\n        }\n    }\n    handleNickname(e) {\n        let nicknameValue = e.target.value;\n        if (nicknameValue === \"\") {\n            this.setState({\n                nickname: \"\",\n                nicknameErr: false\n            });\n            return;\n        }\n        if (nicknameValue.length < 4) {\n            this.setState({\n                nickname: nicknameValue,\n                nicknameErr: true,\n            });\n            return;\n        }\n        this.setState({\n            nicknameValue: nicknameValue,\n            nicknameErr: false\n        })\n    }\n    handlePassword(e) {\n        let passwordValue = e.target.value;\n        if (passwordValue === \"\") {\n            this.setState({\n                password: \"\",\n                passwordErr: false\n            });\n            return;\n        }\n        if (passwordValue.length < 4) {\n            this.setState({\n                password: passwordValue,\n                passwordErr: true,\n            });\n            return;\n        }\n        this.setState({\n            password: passwordValue,\n            passwordErr: false\n        })\n    }\n    handlePasswordConfirm(e) {\n        let passwordConfirmValue = e.target.value;\n        if (passwordConfirmValue !== this.state.password) {\n            this.setState({\n                passwordConfirmValue: passwordConfirmValue,\n                passwordConfirmErr: true\n            });\n            return;\n        }\n        this.setState({\n            passwordConfirmValue: passwordConfirmValue,\n            passwordConfirmErr: false\n        })\n    }\n    handleInfoClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        let orInfo = this.state.info;\n        orInfo.open = false;\n        this.setState({\n            info: orInfo\n        });\n    };\n    handleKeyDown = e => {\n        if (e.keyCode === 13) {\n            this.handleLogin();\n            e.preventDefault();\n        }\n    };\n    handleComplete() {\n        if(!this.state.email) {\n            this.setState({\n                emailErr: true,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"密码不能为空!\"\n                }\n            });\n            return\n        }\n        if(!this.state.password) {\n            this.setState({\n                passwordErr: true,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"密码不能为空!\"\n                }\n            });\n            return;\n        }\n        fetch(completeApi, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        }).then(rsp => {\n            if(rsp.status === 200) {\n                let token = rsp.headers.get(\"X-Login-token\");\n                storage.token = token;\n                return rsp.json();\n            } else {\n                return {\n                    code: rsp.status,\n                    message: \"internal error\"\n                }\n            }\n        }).then(data => {\n            if(data.code === 200) {\n                this.setState({\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"success\",\n                        message: \"登陆成功!\"\n                    }\n                });\n\n                let that = this;\n                setTimeout(function () {\n                    that.props.history.push(\"/profile\");\n                }, 1000);\n\n                return;\n            }\n            if(data.code === 300) {\n                this.setState({\n                    emailErr: true,\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"邮箱或密码格式不正确!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 303) {\n                this.setState({\n                    emailErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"用户不存在!\"\n                    }\n                });\n                return;\n            }\n            if(data.code === 304) {\n                this.setState({\n                    passwordErr: true,\n                    disabled: false,\n                    info: {\n                        open: true,\n                        variant: \"error\",\n                        message: \"密码错误!\"\n                    }\n                });\n                return;\n            }\n\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"未知错误!\"\n                }\n            });\n        }).catch(err => {\n            alert(err);\n            this.setState({\n                disabled: false,\n                info: {\n                    open: true,\n                    variant: \"error\",\n                    message: \"网络错误: \" + err\n                }\n            });\n        });\n        this.setState({\n            disabled: true\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container} onSubmit={e => {\n                alert(e)\n            }}>\n                <CssBaseline/>\n                <LinearProgress hidden={!this.state.disabled} className={classes.progress} />\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.info.open}\n                    autoHideDuration={1000}\n                    onClose={this.handleInfoClose}\n                >\n                    <MySnackbarContent\n                        onClose={this.handleInfoClose}\n                        variant={this.state.info.variant}\n                        message={this.state.info.message}\n                    />\n                </Snackbar>\n                <Paper className={classes.paper}>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"primary\"\n                        className={classes.typography}\n                    >\n                        <Cloud className={classes.cloud}/>我记 ● 云账本\n                    </Typography>\n                    <Divider variant=\"middle\" className={classes.divider}/>\n                    <form className={classes.form} onKeyDown={this.handleKeyDown}>\n                        <Grid container justify=\"center\">\n                            <input\n                                accept=\"image/*\"\n                                className={classes.fileInput}\n                                id=\"avatar-file\"\n                                multiple\n                                type=\"file\"\n                                onChange={e => this.handleAvatar(e)}\n                            />\n                            <label htmlFor=\"avatar-file\" className={classes.avatarLabel}>\n                                <Avatar alt=\"\" src=\"http://www.koogo.net:8080/user/statics/avatar/avatar_default.png\" className={classes.bigAvatar} />\n                                <Link variant=\"body2\">\n                                    点击上传\n                                </Link>\n                            </label>\n                        </Grid>\n                        <TextField\n                            className={classes.textField}\n                            id=\"complete-nickname\"\n                            variant=\"filled\"\n                            label=\"昵称\"\n                            autoComplete=\"off\"\n                            defaultValue={this.state.nickname}\n                            error={this.state.nicknameErr}\n                            disabled={this.state.disabled}\n                            onChange={e => this.handleNickname(e)}\n                            required\n                        />\n                        <TextField\n                            className={classes.textField}\n                            variant=\"filled\"\n                            label=\"邮箱\"\n                            autoComplete=\"off\"\n                            defaultValue={this.state.email}\n                            disabled={true}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            id=\"complete-password\"\n                            variant=\"filled\"\n                            label=\"密码\"\n                            autoComplete=\"new-password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={e => this.handlePassword(e)}\n                            onBlur={e => this.handlePassword(e)}\n                            error={this.state.passwordErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <TextField\n                            className={classes.textField}\n                            id=\"complete-password-confirm\"\n                            variant=\"filled\"\n                            label=\"密码确认\"\n                            autoComplete=\"new-password\"\n                            type=\"password\"\n                            value={this.state.passwordConfirm}\n                            onChange={e => this.handlePasswordConfirm(e)}\n                            onBlur={e => this.handlePassword(e)}\n                            error={this.state.passwordConfirmErr}\n                            disabled={this.state.disabled}\n                            required\n                        />\n                        <Button\n                            variant=\"outlined\" color=\"primary\"\n                            className={classes.button}\n                            onClick={this.handleComplete}\n                            disabled={this.state.disabled}\n                        >\n                            完成注册\n                        </Button>\n                    </form>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nComplete.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Complete);\n"]},"metadata":{},"sourceType":"module"}