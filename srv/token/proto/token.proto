syntax = "proto3";

package proto;

service Token {
    rpc GetRegisterToken(GetRegisterTokenReq) returns (GetRegisterTokenRsp) {};
    rpc VerifyRegisterToken(VerifyRegisterTokenReq) returns (VerifyRegisterTokenRsp) {};
    rpc GetLoginToken(GetLoginTokenReq) returns (GetLoginTokenRsp) {};
    rpc VerifyLoginToken(VerifyLoginTokenReq) returns (VerifyLoginTokenRsp) {};
    rpc RefreshLoginToken(RefreshLoginTokenReq) returns (RefreshLoginTokenRsp) {};
    rpc CancelToken(CancelTokenReq) returns (CancelTokenRsp) {};
}

enum TokenStatus {
    OK = 0;
    INVALID = 1;
    EXPIRED = 2;
    CANCELED = 3;
}

message RegisterTokenClaims {
    string email = 1;
    int64 expires_at = 2;
}
message GetRegisterTokenReq {
    RegisterTokenClaims claims = 1;
    string secret_key = 2;
}

message GetRegisterTokenRsp {
    string token = 1;
}

message VerifyRegisterTokenReq {
    string token = 1;
    string secret_key = 2;
}

message VerifyRegisterTokenRsp {
    TokenStatus token_status = 1;
    RegisterTokenClaims claims = 2;
}

message LoginTokenClaims {
    int64 user_id = 1;
    string email = 2;
    string nickname = 3;
    string avatar = 4;
    int64 expires_at = 5;
}

message GetLoginTokenReq {
    LoginTokenClaims claims = 1;
    string secret_key = 2;
}

message GetLoginTokenRsp {
    string token = 1;
}

message VerifyLoginTokenReq {
    string token = 1;
    string secret_key = 2;
}

message VerifyLoginTokenRsp {
    TokenStatus token_status = 1;
    LoginTokenClaims claims = 2;
}

message RefreshLoginTokenReq {
    string token = 1;
    int64 add_seconds = 2;
    string secret_key = 3;
}

message RefreshLoginTokenRsp {
    string token = 1;
}

message CancelTokenReq {
    string token = 1;
}

message CancelTokenRsp {
    // Empty
}
